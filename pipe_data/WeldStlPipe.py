# -*- coding: utf-8 -*-

import os
#import sys
from PySide import QtGui
from PySide import QtUiTools
from PySide import QtCore
from FreeCAD import Base
import FreeCAD, Part, math
import DraftVecUtils
import Sketcher
import PartDesign
from math import pi
import Draft
import FreeCAD as App
import ParamWeldStlPipe

DEBUG = True # set to True to show debug messages

lst=[
'00_Flange','01_Elbow','02_Tee','03_Reducer_concentric','04_Reducer_eccentric','05_Straight pipe',
'06_Single_flange_straight_pipe','07_Both_flanges_straight_pipe','08_Cap','09_Flange_lid','10_Rap_joint',
'11_Gate_Valve_internal','12_Gate_Valve_external','13_Check_Valve_swing_type','14_Expansion joint_10k','15_Flex_joint_10k',
'16_Expansion joint_7.5k']

l_lst={
'00':'フランジ','01':'エルボ','02':'チーズ','03':'同心レジューサ','04':'偏芯レジューサ','05':'直管',
'06':'片フランジ直管','07':'両フランジ直管','08':'キャップ','09':'フランジ蓋','10':'ラップジョイント',
'11':'仕切弁_内ねじ','12':'仕切弁_外ねじ','13':'逆止弁','14':'伸縮継手_10k','15':'フレキシブルジョイント_10k',
'16':'伸縮継手_7.5k'}

mate=['Carbon steel','Stainless steel','Bronze','Cast Iron']
flg_carbon=['JIS5k','JIS7.5k','JIS10k','JIS16k']
flg_stainless=['JIS5k','JIS7.5k','JIS10k','JIS5k_Loose','JIS10k_Loose']
exp_mate=['Carbon steel']
exp_carbon=['JIS10k']

#直管+フランジ
s_flg_carbon=[
'SGP_JIS5k','SGP_JIS7.5k','SGP_JIS10k','SGP_JIS16k',
'Sch40_JIS5k','Sch40_JIS7.5k','Sch40_JIS10k','Sch40_JIS16k',
'Sch80_JIS5k','Sch80_JIS7.5k','Sch80_JIS10k','Sch80_JIS16k',
]

s_flg_stainless=[
'Sch10S_JIS5k','Sch10S_JIS7.5k','Sch10S_JIS10k',
'Sch20S_JIS5k','Sch20S_JIS7.5k','Sch20S_JIS10k',
'Sch40_JIS5k','Sch40_JIS7.5k','Sch40_JIS10k',
]

exp_st=['20mm','50mm','100mm','200mm',]

Tube_carbon=['SGP','Sch40','Sch80']
Tube_stainless=['Sch10S','Sch20S','Sch40']

tube_d=[
'006','008','010','015','020','025','032','040','050','065',
'080','100','125','150','200','250','300','350','400','450','500',
'550','600','650','700',
]
Elbow_carbon=[
'045_Long_SGP', '045_Long_Sch40','045_Long_Sch80',
'090_Long_SGP', '090_Long_Sch40','090_Long_Sch80',
'180_Long_SGP', '180_Long_Sch40','180_Long_Sch80',
'045_Short_SGP', '045_Short_Sch40','045_Short_Sch80',
'090_Short_SGP', '090_Short_Sch40','090_Short_Sch80',
'180_Short_SGP', '180_Short_Sch40','180_Short_Sch80',
'090_Large_SGP',
]
Elbow_stainless=[
'045_Long_Sch10S', '045_Long_Sch20S','045_Long_Sch40',
'090_Long_Sch10S', '090_Long_Sch20S','090_Long_Sch40',
'090_Short_Sch10S', '090_Short_Sch20S','090_Short_Sch40',
]

flg_d=[
'010','015','020','025','032','040','050','065','080','100','125','150','200','250','300','350',
'400','450','500','550','600','650','700','750','800','900','1000','1200','1350','1500'
]

flg_75=[
'075','100','125','150','200','250','300','350','400','450',
'500','600','700','800','900','1000','1100','1200','1350','1500'
]

reduc_carbon=['SGP', 'Sch40','Sch80','Large']
reduc_stainless=['Sch10S', 'Sch20S','Sch40']
reduc=[
'020x015','025x015','025x020','032x015','032x020','032x025','040x015','040x020','040x025',
'040x032','050x020','050x025','050x032','050x040','065x025','065x032','065x040','065x050',
'080x032','080x040','080x050','080x065','100x040','100x050','100x065','100x080','125x050',
'125x065','125x080','125x100','150x065','150x080','150x100','150x125','200x100',
'200x125','200x150','250x100','250x125','250x150','250x200','300x125','300x150',
'300x200','300x250','350x150','350x200','350x250','350x300','400x200','400x250',
'400x300','400x350','450x250','450x300','450x350','450x400','500x300',
'500x350','500x400','500x450','550x400','550x450','500x500',
'550x400','550x450','550x500','600x450','600x500','600x550',
'650x500','650x550','650x600','7000x550','700x600','700x650',
]

Tee_carbon=['SGP', 'Sch40','Sch80','Large']
Tee_stainless=['Sch10S', 'Sch20S','Sch40']

tee=[
'015x015','020x015','020x020','025x015','025x020','025x025','032x015','032x020','032x025','032x032','040x015',
'040x020','040x025','040x032','040x040','050x020','050x025','050x032','050x040','050x050','065x025','065x032',
'065x040','065x050','065x065','080x032','080x040','080x050','080x065','080x080','100x040','100x050','100x065',
'100x080','100x100','125x050','125x065','125x080','125x100','125x125','150x065','150x080','150x100',
'150x125','150x150','200x100','200x125','200x150','200x200','250x100','250x125','250x150',
'250x200','250x250','300x125','300x150','300x200','300x250','300x300','350x150','350x200',
'350x250','350x300','350x350','400x150','400x200','400x250','400x300','400x350','400x400',
'450x200','450x250','450x300','450x350','450x400','450x450','500x200','500x250','500x300',
'500x350','500x400','500x450','500x500','550x400','550x450','550x500',
'600x450','600x500','600x550','600x600','650x500','650x550','650x600','650x650',
'700x550','700x600','700x650','700x700',
]

rap=['JIS5k','JIS10k']
check=['JIS7.5k','JIS10k',]


#可とう伸縮継手
#         d1    d2  L     L1       c     f      R
exp_20mm={
'020':(   45,   55, 150,  130,     10,   14,    22),
'025':(   50,   60, 150,  130,     10,   16,    22),
'032':(   62,   77, 150,  130,     10,   22,    22),
'040':(   60,   80, 150,  130,     10,   21,    22),
'050':(   75,   95, 150,  130,     10,   29,    22),
'065':(   95,  115, 150,  130,     10,   39,    22),
'080':(  105,  125, 150,  130,     10,   44,    22),
'100':(  130,  150, 150,  130,     10,   56,    22),
'125':(  160,  180, 150,  130,     10,   71,    22),
'150':(  190,  210, 200,  180,     10,   83,    30),
'200':(  237,  257, 200,  170,     15,  107,    30),
'250':(  304,  324, 200,  170,     15,  140,    30),
'300':(  341,  366, 200,  170,     15,  156,    33),
'350':(  386,  416, 200,  170,     15,  179,    33),
'400':(  465,  485, 200,  170,     15,  218,    33),
'450':(  515,  535, 200,  170,     15,  243,    33),
'500':(  565,  585, 250,  220,     15,  268,    33),
'550':(  615,  635, 250,  220,     15,  268,    33),
'600':(  665,  685, 250,  210,     20,  311,    33),
}
#                                                   フレキシブルジョイント
#         d1    d2  L     L1       c     f      R   L    R
exp_50mm={
'020':(   45,   55, 250,  230,     10,   14,    22, 100,  20),
'025':(   50,   60, 250,  230,     10,   16,    22, 100,  50),
'032':(   62,   77, 250,  230,     10,   22,    22, 100,  50),
'040':(   60,   80, 250,  230,     10,   21,    22, 100,  50),
'050':(   75,   95, 250,  230,     10,   29,    22, 100,  50),
'065':(   95,  115, 250,  230,     10,   39,    22, 125,  50),
'080':(  105,  125, 300,  280,     10,   44,    22, 125,  50),
'100':(  130,  150, 300,  280,     10,   56,    22, 125,  50),
'125':(  160,  180, 300,  280,     10,   71,    22, 125,  50),
'150':(  190,  210, 300,  280,     10,   83,    30, 150,  50),
'200':(  237,  257, 300,  270,     15,  107,    30, 150,  50),
'250':(  304,  324, 300,  270,     15,  140,    30, 175,  50),
'300':(  341,  366, 300,  270,     15,  156,    33, 175,  50),
'350':(  386,  416, 350,  320,     15,  179,    33, 175,  50),
'400':(  465,  485, 350,  320,     15,  218,    33, 175,  50),
'450':(  515,  535, 350,  320,     15,  243,    33, 175,  50),
'500':(  565,  585, 350,  320,     15,  268,    33, 175,  50),
'550':(  615,  635, 350,  320,     15,  268,    33, 175,  50),
'600':(  665,  685, 400,  360,     20,  311,    33, 175,  50),
}

#         d1    d2  L     L1       c     f      R
exp_100mm={
'020':(   45,   55, 350,  330,     10,   14,    22),
'025':(   50,   60, 350,  330,     10,   16,    22),
'032':(   62,   77, 350,  330,     10,   22,    22),
'040':(   60,   80, 350,  330,     10,   21,    22),
'050':(   75,   95, 350,  330,     10,   29,    22),
'065':(   95,  115, 350,  330,     10,   39,    22),
'080':(  105,  125, 350,  330,     10,   44,    22),
'100':(  130,  150, 350,  330,     10,   56,    22),
'125':(  160,  180, 350,  330,     10,   71,    22),
'150':(  190,  210, 500,  480,     10,   83,    30),
'200':(  237,  257, 500,  470,     15,  107,    30),
'250':(  304,  324, 500,  470,     15,  140,    30),
'300':(  341,  366, 550,  520,     15,  156,    33),
'350':(  386,  416, 550,  520,     15,  179,    33),
'400':(  465,  485, 550,  520,     15,  218,    33),
'450':(  515,  535, 550,  520,     15,  243,    33),
'500':(  565,  585, 550,  520,     15,  268,    33),
'550':(  615,  635, 550,  520,     15,  268,    33),
'600':(  665,  685, 550,  510,     20,  311,    33),
}

#         d1    d2  L     L1       c     f      R
exp_200mm={
'020':(   45,   55, 450,  430,     10,   14,    22),
'025':(   50,   60, 450,  430,     10,   16,    22),
'032':(   62,   77, 450,  430,     10,   22,    22),
'040':(   60,   80, 450,  430,     10,   21,    22),
'050':(   75,   95, 450,  430,     10,   29,    22),
'065':(   95,  115, 450,  430,     10,   39,    22),
'080':(  105,  125, 450,  430,     10,   44,    22),
'100':(  130,  150, 450,  430,     10,   56,    22),
'125':(  160,  180, 450,  430,     10,   71,    22),
'150':(  190,  210, 600,  580,     10,   83,    30),
'200':(  237,  257, 600,  570,     15,  107,    30),
'250':(  304,  324, 600,  570,     15,  140,    30),
'300':(  341,  366, 650,  620,     15,  156,    33),
'350':(  386,  416, 650,  620,     15,  179,    33),
'400':(  465,  485, 650,  620,     15,  218,    33),
'450':(  515,  535, 650,  620,     15,  243,    33),
'500':(  565,  585, 650,  620,     15,  268,    33),
'550':(  565,  635, 650,  620,     15,  268,    33),
'600':(  615,  685, 650,  610,     20,  311,    33),
}

#ラップジョイント
#                      5k    10k
#         OD,     T,    G,    G,      F,    R
raps={
'015':(   21.7,   2.1,  44,   51,     30,   3),
'020':(   27.2,   2.1,  49,   56,     30,   3),
'025':(   34.0,   2.8,  59,   67,     50,   3),
'032':(   42.7,   2.8,  70,   76,     50,   4),
'040':(   48.6,   2.8,  75,   81,     50,   4),
'050':(   60.5,   2.8,  85,   96,     50,   4),
'065':(   76.3,   3.0, 110,  116,     50,   5),
'080':(   89.1,   3.0, 121,  126,     50,   5),
'100':(  114.3,   3.0, 141,  151,     50,   5),
'125':(  139.8,   3.4, 176,  182,     50,   6),
'150':(  165.2,   3.4, 206,  212,     50,   6),
'200':(  216.3,   4.0, 252,  262,     65,   6),
'250':(  267.4,   4.0, 317,  324,     65,   6),
'300':(  318.5,   4.5, 360,  368,     65,   9),
}

#直管              1,      2,      3,     4,     5,     6,     7,     8,     9       10キャップ
#                 SGP,STPG,STS,STPT,STPA,STPL,         SUS-TP
#                 SGP     Sch20,  Sch40, Sch60, Sch80, Sch5S, Sch10S,Sch20S,Sch40
#d0,      d2,     t,      t,      t,     t,     t,     t,     t,     t,     t,      E
str_tube={
'006':(   10.5,   2.0,    0,    1.7,     2.2,   2.4,   1.00,  1.20,  1.5,  1.7,     0),
'008':(   13.8,   2.3,    0,    2.2,     2.4,   3.0,   1.20,  1.65,  2.0,  2.2,     0),
'010':(   17.3,   2.3,    0,    2.3,     2.8,   3.2,   1.20,  1.65,  2.0,  2.3,     0),
'015':(   21.7,   2.8,    0,    2.8,     3.2,   3.7,   1.65,  2.10,  2.5,  2.8,  25.4),
'020':(   27.2,   2.8,    0,    2.9,     3.4,   3.9,   1.65,  2.10,  2.5,  2.9,  25.4),
'025':(   34.0,   3.2,    0,    3.4,     3.9,   4.5,   1.65,  2.80,  2.5,  3.4,  38.1),
'032':(   42.7,   3.5,    0,    3.6,     4.5,   4.9,   1.65,  2.80,  3.0,  3.6,  38.1),
'040':(   48.6,   3.5,    0,    3.7,     4.5,   5.1,   1.65,  2.80,  3.0,  3.7,  38.1),
'050':(   60.5,   3.8,  3.2,    3.9,     4.9,   5.5,   1.65,  2.80,  3.5,  3.9,  38.1),
'065':(   76.3,   4.2,  4.5,    5.2,     6.0,   7.0,   2.10,  3.00,  3.5,  5.2,  38.1),
'075':(   89.1,   4.2,  4.5,    5.5,     6.6,   7.6,   2.10,  3.00,  4.0,  5.5,  50.8),
'080':(   89.1,   4.2,  4.5,    5.5,     6.6,   7.6,   2.10,  3.00,  4.0,  5.5,  50.8),
'100':(  114.3,   4.5,  4.9,    6.0,     7.1,   8.6,   2.10,  3.00,  4.0,  6.0,  63.5),
'125':(  139.8,   4.5,  5.1,    6.6,     8.1,   9.5,   2.80,  3.40,  5.0,  6.6,  76.2),
'150':(  165.2,   5.0,  5.5,    7.1,     9.3,   11.0,  2.80,  3.40,  5.0,  7.1,  88.9),
'200':(  216.3,   5.8,  6.4,    8.2,    10.3,   12.7,  2.80,  4.00,  6.5,  8.2, 101.6),
'250':(  267.4,   6.6,  6.4,    9.3,    12.7,   15.1,  3.40,  4.00,  6.5,  9.3, 127.0),
'300':(  318.5,   6.9,  6.4,   10.3,    14.3,   17.4,  4.00,  4.50,  6.5, 10.3, 152.4),
'350':(  355.6,   7.9,  7.9,   11.1,    15.1,   19.0,  0.00,  0.00,  0.0, 11.1, 165.1),
'400':(  406.4,   7.9,  7.9,   12.7,    16.7,   21.4,  0.00,  0.00,  0.0, 12.7, 177.8),
'450':(  457.2,   7.9,  7.9,   14.3,    19.0,   23.8,  0.00,  0.00,  0.0, 14.3, 203.2),
'500':(  508.0,   7.9,  9.5,   15.1,    20.6,   26.2,  0.00,  0.00,  0.0, 15.1, 228.6),
'550':(  558.8,   7.9,  9.5,   15.1,    20.6,   26.2,  0.00,  0.00,  0.0, 15.1, 228.6),
'600':(  609.6,   7.9,  9.5,   0.00,    0.00,   0.00,  0.00,  0.00,  0.0, 0.00, 0.000),
'650':(  660.4,   7.9,  9.5,   0.00,    0.00,   0.00,  0.00,  0.00,  0.0, 0.00, 0.000),
'700':(  711.2,   7.9,  9.5,   0.00,    0.00,   0.00,  0.00,  0.00,  0.0, 0.00, 0.000),
}

# JIS2k
#         d0,    d2,      d4,     d5,   t,      E,      n,      a,      b,      T,      r
JIS2k={
'450':(  457.2,	 461,	 555,	 605,	22,	23,	16,     0,      0,      0,      0),
'500':(  508.0,  512, 	 605,	 655,	22,	23,	20,     0,      0,      0,      0),
'550':(  558.8,	 563,	 665,	 720,	24,	25,	20,     0,      0,      0,      0),
'600':(  609.6,  614,	 715,	 770,	24,	25,	20,     0,      0,      0,      0),
'650':(  660.4,  664,	 770,	 825,	24,	25,	24,     0,      0,      0,      0),
'700':(  711.2,	 715,	 820,	 875,	24,	25,	24,     0,      0,      0,      0),
'750':(  762.0,  766,	 880,	 945,	24,	27,	24,     0,      0,      0,      0),
'800':(  812.8,	 817,	 930,	 995,	24,	27,	24,     0,      0,      0,      0),
'850':(  863.6,	 868,	 980,	1045,	24,	27,	24,     0,      0,      0,      0),
'900':(  914.4,	 918,	1030,	1095,	24,	27,	24,     0,      0,      0,      0),
'1000':(1016.0,	1020,	1130,	1195,	26,	27,	28,     0,      0,      0,      0),
'1100':(1117.6,	1122,	1240,	1305,	26,	27,	28,     0,      0,      0,      0),
'1200':(1219.2,	1224,	1350,	1420,	26,	27,	32,     0,      0,      0,      0),
'1350':(1371.6,	1376,	1505,	1575,	26,	27,	32,     0,      0,      0,      0),
'1500':(1524.0,	1528,	1660,	1730,	28,	27,	36,     0,      0,      0,      0)
}

# JIS5k                                                                               ラップジョイント
#        d0,     d2,     d4,     d5,    t,      E,       n,      a,      b,      T,      r,    R
JIS5k={
'010':(  17.3,	 17.8, 	 55,	 75,	 9,	12,	 4,      0,      0,      0,      0,    0),
'015':(  21.7,	 22.2, 	 60,	 80,	 9,	12,	 4,      0,      0,      0,      0,    3),
'020':(  27.2,	 27.7, 	 65,	 85,	10,	12,	 4,      0,      0,      0,      0,    3),
'025':(  34.0,	 34.5, 	 75,	 95,	10,	12,	 4,      0,      0,      0,      0,    3),
'032':(  42.7,	 43.2, 	 90,	115,	12,	15,	 4,      0,      0,      0,      0,    4),
'040':(  48.6,	 49.1, 	 95,	120,	12,	15,	 4,      0,      0,      0,      0,    4),
'050':(  60.5,	 61.1, 	105,	130,	14,	15,	 4,      0,      0,      0,      0,    4),
'065':(  76.3,	 77.1, 	130,	155,	14,	15,	 4,      0,      0,      0,      0,    5),
'080':(  89.1,	 90.0, 	145,	180,	14,	19,	 4,      0,      0,      0,      0,    5),
'100':(114.3,	115.4, 	165,	200,	16,	19,	 8,      0,      0,      0,      0,    5),
'125':(139.8,	141.2, 	200,	235,	16,	19,	 8,      0,      0,      0,      0,    6),
'150':(165.2,	166.6, 	230,	265,	18,	19,	 8,      0,      0,      0,      0,    6),
'200':(216.3,	218.0, 	280,	320,	20,	23,	 8,      0,      0,      0,      0,    6),
'250':(267.4,	269.0, 	345,	385,	22,	23,	12,      0,      0,      0,      0,    6),
'300':(318.5,	321.0, 	390,	430,	22,	23,	12,      0,      0,      0,      0,    9),
'350':(355.6,	358.1, 	435,	480,	24,	25,	12,      0,      0,      0,      0,    0),
'400':(406.4,	409.0, 	495,	540,	24,	25,	16,      0,      0,      0,      0,    0),
'450':(457.2,	460.0, 	555,	605,	24,	25,	16,      0,      0,      0,      0,    0),
'500':(508.0,	511.0, 	605,	655,	24,	25,	20,      0,      0,      0,      0,    0),
'550':(558.8,   562.0,  665,    720,    26,     27,     20,      0,      0,      0,      0,    0),
'600':(609.6,	613.0, 	715,	770,	26,	27,	20,      0,      0,      0,      0,    0),
'700':(711.2,	715.0, 	820,	875,	26,	27,	24,      0,      0,      0,      0,    0),
'800':(812.8,	817.0, 	930,	995,	28,	33,	24,      0,      0,      0,      0,    0),
'900':(914.4,	919.0, 1030,   1095,	30,	33,	24,      0,      0,      0,      0,    0),
'1000':(1016.6,1021.0, 1130,   1195,	32,	35,	28,      0,      0,      0,      0,    0),
}

#フランジ7.5k------------------------------------------------------------------------------------
#          d0,   d2,     d4,   d5,   t,   E,    n
JIS75k={
'075':(    75,   90.0,   168,  211,  18,  19,   4),
'100':(   100,  115.4,   195,  238,  18,  19,   4),
'125':(   125,  141.2,   220,  263,  20,  19,   6),
'150':(   150,  166.6,   247,  290,  22,  19,   6),
'200':(   200,  218.0,   299,  342,  22,  19,   8),
'250':(   250,  269.5,   360,  410,  24,  23,   8),
'300':(   300,  321.0,   414,  464,  24,  23,  10),
'350':(   350,  358.1,   472,  530,  26,  25,  10),
'400':(   400,  409.0,   524,  582,  26,  25,  12),
'450':(   450,  460.0,   585,  652,  28,  27,  12),
'500':(   500,  511.0,   639,  706,  28,  27,  12),
'600':(   600,  613.0,   743,  810,  30,  27,  16),
'700':(   700,  715.0,   854,  928,  32,  33,  16),
'800':(   800,  817.0,   960, 1034,  34,  33,  20),
'900':(   900,  919.0,   1073, 1156, 36,  33,  20),
'1000':( 1000, 1021.0,   1179, 1262, 38,  33,  24),
'1100':( 1100, 1123.0,   1283, 1366, 41,  33,  24),
'1200':( 1200, 1224.0,   1387, 1470, 43,  33,  28),
'1350':( 1350, 1377.0,   1552, 1642, 45,  39,  28),
'1500':( 1500, 1529.0,   1710, 1800, 48,  39,  32),
}

# JIS10k
#          d0,    d2,     d4,     d5,   t,      E,       n,        a,     b,     T,     r
JIS10k={
'010':(    17.3,  17.8,   65,	  90,	12,	15,	 4,        0,     0,     0,     0),
'015':(    21.7,  22.2,   70,	  95,	12,	15,	 4,        0,     0,     0,     0),
'020':(    27.2,  27.7,   75,	 100,	14,	15,	 4,        0,     0,     0,     0),
'025':(    34.0,  34.5,   90,	 125,	14,	19,	 4,        0,     0,     0,     0),
'032':(    42.7,  43.2,  100,	 135,	16,	19,	 4,        0,     0,     0,     0),
'040':(    48.6,  49.1,  105,	 140,	16,	19,	 4,        0,     0,     0,     0),
'050':(    60.5,  61.1,  120,	 155,	16,	19,	 4,        0,     0,     0,     0),
'065':(    76.3,  77.1,  140,	 175,	18,	19,	 4,        0,     0,     0,     0),
'080':(    89.1,  90.0,  150,	 185,	18,	19,	 8,        0,     0,     0,     0),
'100':(   114.3, 115.4,  175,	 210,	18,	19,	 8,        0,     0,     0,     0),
'125':(   139.8, 141.2,  210,	 250,	20,	23,	 8,        0,     0,     0,     0),
'150':(   165.2, 166.6,  240,	 280,	22,	23,	 8,        0,     0,     0,     0),
'200':(   216.3, 218.0,  290,	 330,	22,	23,	12,        0,     0,     0,     0),
'250':(   267.4, 269.0,  355,	 400,	24,	25,	12,	 288,	292,	36,	6),
'300':(   318.5, 321.0,  400,	 445,	24,	25,	16,	 340,	346,	38,	6),
'350':(   355.6, 358.1,  445,	 490,	26,	25,	16,	 380,	386,	42,	6),
'400':(   406.4, 409.0,  510,	 560,	28,	27,	16,	 436,	442,	44,	6),
'450':(   457.2, 460.0,  565,	 620,	30,	27,	20,	 496,	502,	48,	6),
'500':(   508.0, 511.0,  620,	 675,	30,	27,	20,	 548,	554,	48,	6),
'550':(   558.8, 562.0,	 680,	 745,	32,	33,	20,	 604,	610,	52,	6),
'600':(   609.6, 613.0,  730,	 795,	32,	33,	24,	 656,	662,	52,	6),
'650':(   660.4, 664.0,  780,	 845,	34,	33,	24,	 706,	712,	56,	6),
'700':(   711.2, 715.0,  840,	 905,	34,	33,	24,	 762,	770,	58,	6),
'750':(   762.0, 766.0,  900,	 970,	36,	33,	24,	 816,	824,	62,	6),
'800':(   812.8, 817.0,  950,	1020,	36,	33,	28,	 868,	876,	64,	6),
'850':(   863.6, 863.6, 1000,	1070,	36,	33,	28,	 920,	928,	66,	6),
'900':(   914.4, 919.0, 1050,	1120,	38,	33,	28,	 971,	979,	70,	6),
'1000':( 1016.0,1021.0,	1160,	1235,	40,	39,	28,	1073,	1081,	74,	6),
'1200':( 1219.2,1224.0,	1380,	1465,	44,	39,	32,	1280,	1290,	78,	6),
'1350':( 1371.6,1376.0,	1540,	1630,	48,	46,	36,	1432,	1442,	82,	6),
'1500':( 1524.0,1528.0,	1700,	1795,	50,	46,	40,	1590,	1602,	86,	6),
}

#        d0,     d2,     d4,    d5,     t,      E,      n,      a,       b,      T,      r
JIS16k={
'010':(  17.3,    17.8,  65,     90,     12,     15,     4,      26,      28,     16,     4),
'015':(  21.7,    22.2,  70,     95,     12,     15,     4,      30,      32,     16,     4),
'020':(  27.2,    27.7,  75,    100,     14,     15,     4,      38,      42,     20,     4),
'025':(  34.0,    34.5,  90,    125,     14,     19,     4,      46,      50,     20,     4),
'032':(  42.7,    43.2, 100,    135,     16,     19,     4,      56,      60,     22,     5),
'040':(  48.6,    49.1, 105,    140,     16,     19,     4,      62,      66,     24,     5),
'050':(  60.5,    61.1, 120,    155,     16,     19,     8,      76,      80,     24,     5),
'065':(  76.3,    77.1, 140,    175,     18,     19,     8,      94,      98,     26,     5),
'080':(  89.1,    90.0, 160,    200,     20,     23,     8,     108,     112,     28,     6),
'100':( 114.3,   115.4, 185,    225,     22,     23,     8,     134,     138,     34,     6),
'125':( 139.8,   141.2, 225,    270,     22,     25,     8,     164,     170,     34,     6),
'150':( 165.2,   166.6, 260,    305,     24,     25,    12,     196,     202,     38,     6),
'200':( 216.3,   218.0, 305,    350,     26,     25,    12,     244,     252,     40,     6),
'250':( 267.4,   269.0, 380,    430,     28,     27,    12,     304,     312,     44,     6),
'300':( 318.5,   321.0, 430,    480,     30,     27,    16,     354,     364,     48,     8),
'350':( 355.6,   358.1, 480,    540,     34,     33,    16,     398,     408,     52,     8),
'400':( 406.4,   409.0, 540,    605,     38,     33,    16,     446,     456,     60,    10),
'450':( 457.2,   460.0, 605,    675,     40,     33,    20,     504,     514,     64,    10),
'500':( 508.0,   511.0, 660,    730,     42,     33,    20,     558,     568,     68,    10),
'550':( 558.8,   562.0, 720,    795,     44,     39,    20,     612,     622,     70,    10),
'600':( 609.6,   613.0, 770,    845,     46,     39,    24,     666,     676,     74,    10),
}

#        d0,     d2,     d4,    d5,     t,      E,      n,      a,       b,      T,      r,  f
JIS20k={
'010':(  17.3,    17.8,  65,     90,     12,     15,     4,      26,      28,     16,     4,  1),
'015':(  21.7,    22.2,  70,     95,     12,     15,     4,      30,      32,     16,     4,  1),
'020':(  27.2,    27.7,  75,    100,     14,     15,     4,      38,      42,     20,     4,  1),
'025':(  34.0,    34.5,  90,    125,     14,     19,     4,      46,      50,     20,     4,  1),
'032':(  42.7,    43.2, 100,    135,     16,     19,     4,      56,      60,     22,     5,  2),
'040':(  48.6,    49.1, 105,    140,     16,     19,     4,      62,      66,     24,     5,  2),
'050':(  60.5,    61.1, 120,    155,     16,     19,     8,      76,      80,     24,     5,  2),
'065':(  76.3,    77.1, 140,    175,     18,     19,     8,      94,      98,     26,     5,  2),
'080':(  89.1,    90.0, 160,    200,     20,     23,     8,     108,     112,     28,     6,  2),
'100':( 114.3,   115.4, 185,    225,     22,     23,     8,     134,     138,     34,     6,  2),
'125':( 139.8,   141.2, 225,    270,     22,     25,     8,     164,     170,     34,     6,  2),
'150':( 165.2,   166.6, 260,    305,     24,     25,    12,     196,     202,     38,     6,  2),
'200':( 216.3,   218.0, 305,    350,     26,     25,    12,     244,     252,     40,     6,  2),
'250':( 267.4,   269.0, 380,    430,     28,     27,    12,     304,     312,     44,     6,  2),
'300':( 318.5,   321.0, 430,    480,     30,     27,    16,     354,     364,     48,     8,  3),
'350':( 355.6,   358.1, 480,    540,     34,     33,    16,     398,     408,     52,     8,  3),
'400':( 406.4,   409.0, 540,    605,     38,     33,    16,     446,     456,     60,    10,  3),
'450':( 457.2,   460.0, 605,    675,     40,     33,    20,     504,     514,     64,    10,  3),
'500':( 508.0,   511.0, 660,    730,     42,     33,    20,     558,     568,     68,    10,  3),
'550':( 558.8,   562.0, 720,    795,     44,     39,    20,     612,     622,     70,    10,  3),
'600':( 609.6,   613.0, 770,    845,     46,     39,    24,     666,     676,     74,    10,  3),
}
#              long   short
#口径,    d2,    r,    r,
#
#
#        0,     1,     2,
elbo = {
'015':(  21.7,  38.1,  25.4),
'020':(  27.2,  38.1,  25.4),
'025':(  34.0,  38.1,  25.4),
'032':(  42.7,  47.6,  31.8),
'040':(  48.6,  57.2,  38.1),
'050':(  60.5,  76.2,  50.8),
'065':(  76.3,  95.3,  63.5),
'080':(  89.1, 114.3,  76.2),
'100':( 114.3, 152.4, 101.6),
'125':( 139.8, 190.5, 127.0),
'150':( 165.2, 228.6, 152.4),
'200':( 216.3, 304.8, 203.2),
'250':( 267.4, 381.0, 254.0),
'300':( 318.5, 457.2, 304.8),
'350':( 355.6, 533.4, 355.6),
'400':( 406.4, 609.6, 406.4),
'450':( 457.2, 685.8, 457.2),
'500':( 508.0, 762.0, 508.0),
'550':( 558.8, 838.2, 0.0),
'600':( 609.6, 914.4, 0.0),
'650':( 660.4, 990.6, 0.0),
'700':( 711.2,1066.8, 0.0),
}

#チーズ       0,      1,      2,      3,
#           d1,     d2,     C,      M
tees={
'015x015':( 21.7,   21.7,   25.4,   25.4),
'020x015':( 27.2,   21.7,   28.6,   28.6),
'020x020':( 27.2,   27.2,   28.6,   28.6),
'025x015':( 34.0,   21.7,   38.1,   38.1),
'025x020':( 34.0,   27.2,   38.1,   38.1),
'025x025':( 34.0,   34.0,   38.1,   38.1),
'032x015':( 42.7,   21.7,   47.6,   47.6),
'032x020':( 42.7,   27.2,   47.6,   47.6),
'032x025':( 42.7,   34.0,   47.6,   47.6),
'032x032':( 42.7,   42.7,   47.6,   47.6),
'040x015':( 48.6,   21.7,   57.2,   57.2),
'040x020':( 48.6,   27.2,   57.2,   57.2),
'040x025':( 48.6,   34.0,   57.2,   57.2),
'040x032':( 48.6,   42.7,   57.2,   57.2),
'040x040':( 48.6,   48.6,   57.2,   57.2),
'050x020':( 60.5,   27.2,   63.5,   44.5),
'050x025':( 60.5,   34.0,   63.5,   50.8),
'050x032':( 60.5,   42.7,   63.5,   57.2),
'050x040':( 60.5,   48.6,   63.5,   60.3),
'050x050':( 60.5,   60.5,   63.5,   63.5),
'065x025':( 76.3,   34.0,   76.2,   57.2),
'065x032':( 76.3,   42.7,   76.2,   63.5),
'065x040':( 76.3,   48.6,   76.2,   66.7),
'065x050':( 76.3,   60.5,   76.2,   69.9),
'065x065':( 76.3,   76.3,   76.2,   76.2),
'080x032':( 89.1,   42.7,   85.7,   69.9),
'080x040':( 89.1,   48.6,   85.7,   73.0),
'080x050':( 89.1,   60.5,   85.7,   76.2),
'080x065':( 89.1,   76.3,   85.7,   82.6),
'080x080':( 89.1,   89.1,   85.7,   85.7),
'100x040':(114.3,   48.6,  104.8,   85.7),
'100x050':(114.3,   60.5,  104.8,   88.9),
'100x065':(114.3,   76.3,  104.8,   95.3),
'100x080':(114.3,   89.1,  104.8,   98.4),
'100x100':(114.3,  114.3,  104.8,  104.8),
'125x050':(139.8,   60.5,  123.8,  104.8),
'125x065':(139.8,   76.3,  123.8,  108.0),
'125x080':(139.8,   89.1,  123.8,  111.1),
'125x100':(139.8,  114.3,  123.8,  117.5),
'125x125':(139.8,  139.8,  123.8,  123.8),
'150x065':(165.2,   76.3,  142.9,  120.7),
'150x080':(165.2,   89.1,  142.9,  123.8),
'150x100':(165.2,  114.3,  142.9,  130.2),
'150x125':(165.2,  139.8,  142.9,  136.5),
'150x150':(165.2,  165.2,  142.9,  142.9),
'200x100':(216.3,  114.3,  177.8,  155.6),
'200x125':(216.3,  139.8,  177.8,  161.9),
'200x150':(216.3,  165.2,  177.8,  168.3),
'200x200':(216.3,  216.3,  177.8,  177.8),
'250x100':(267.4,  114.3,  215.9,  184.2),
'250x125':(267.4,  139.8,  215.9,  190.5),
'250x150':(267.4,  165.2,  215.9,  193.7),
'250x200':(267.4,  216.3,  215.9,  203.2),
'250x250':(267.4,  267.4,  215.9,  215.9),
'300x125':(318.5,  139.8,  254.0,  215.9),
'300x150':(318.5,  165.2,  254.0,  219.1),
'300x200':(318.5,  216.3,  254.0,  228.6),
'300x250':(318.5,  267.4,  254.0,  241.3),
'300x300':(318.5,  318.5,  254.0,  254.0),
'350x150':(355.6,  165.2,  279.4,  238.1),
'350x200':(355.6,  216.3,  279.4,  247.7),
'350x250':(355.6,  267.4,  279.4,  257.2),
'350x300':(355.6,  318.5,  279.4,  269.9),
'350x350':(355.6,  355.6,  279.4,  279.4),
'400x150':(406.4,  165.2,  304.8,  263.5),
'400x200':(406.4,  216.3,  304.8,  273.1),
'400x250':(406.4,  267.4,  304.8,  282.6),
'400x300':(406.4,  318.5,  304.8,  295.3),
'400x350':(406.4,  355.6,  304.8,  304.8),
'400x400':(406.4,  406.4,  304.8,  304.8),
'450x200':(457.2,  216.3,  342.9,  298.5),
'450x250':(457.2,  267.4,  342.9,  308.0),
'450x300':(457.2,  318.5,  342.9,  320.7),
'450x350':(457.2,  355.6,  342.9,  330.2),
'450x400':(457.2,  406.4,  342.9,  330.2),
'450x450':(457.2,  457.2,  342.9,  342.9),
'500x200':(508.0,  216.3,  381.0,  323.9),
'500x250':(508.0,  267.4,  381.0,  333.4),
'500x300':(508.0,  318.5,  381.0,  346.1),
'500x350':(508.0,  355.6,  381.0,  355.6),
'500x400':(508.0,  406.4,  381.0,  355.6),
'500x450':(508.0,  457.2,  381.0,  368.3),
'500x500':(508.0,  508.0,  381.0,  381.0),
'550x400':(558.8,  406.4,  419.1,  381.0),
'550x450':(558.8,  457.2,  419.1,  393.7),
'550x500':(558.8,  508.0,  419.1,  406.4),
'550x550':(558.8,  558.8,  419.1,  419.1),
'600x450':(609.6,  457.2,  431.8,  419.1),
'600x500':(609.6,  508.0,  431.8,  431.8),
'600x550':(609.6,  558.8,  431.8,  431.8),
'600x600':(609.6,  609.6,  431.8,  431.8),
'650x500':(660.4,  508.0,  495.3,  457.2),
'650x550':(660.4,  558.8,  495.3,  469.9),
'650x600':(660.4,  609.6,  495.3,  482.6),
'650x650':(660.4,  660.4,  495.3,  495.3),
'700x550':(711.2,  558.8,  520.7,  495.3),
'700x600':(711.2,  609.6,  520.7,  508.0),
'700x650':(711.2,  660.4,  520.7,  520.7),
'700x700':(711.2,  711.2,  520.7,  520.7),
}
#レジューサ
#             d1,     d2,     H
reducs={
'020x015':(   27.2,   21.7,   38.1),
'025x015':(   34.0,   21.7,   50.8),
'025x020':(   34.0,   27.2,   50.8),
'032x015':(   42.7,   21.7,   50.8),
'032x020':(   42.7,   27.2,   50.8),
'032x025':(   42.7,   34.0,   50.8),
'040x015':(   48.6,   21.7,   63.5),
'040x020':(   48.6,   27.2,   63.5),
'040x025':(   48.6,   34.0,   63.5),
'040x032':(   48.6,   42.7,   63.5),
'050x020':(   60.5,   27.2,   76.2),
'050x025':(   60.5,   34.0,   76.2),
'050x032':(   60.5,   42.7,   76.2),
'050x040':(   60.5,   48.6,   76.2),
'065x025':(   76.3,   34.0,   88.9),
'065x032':(   76.3,   42.7,   88.9),
'065x040':(   76.3,   48.6,   88.9),
'065x050':(   76.3,   60.5,   88.9),
'080x032':(   89.1,   42.7,   88.9),
'080x040':(   89.1,   48.6,   88.9),
'080x050':(   89.1,   60.5,   88.9),
'080x065':(   89.1,   76.3,   88.9),
'100x040':(  114.3,   48.6,  101.6),
'100x050':(  114.3,   60.5,  101.6),
'100x065':(  114.3,   76.3,  101.6),
'100x080':(  114.3,   89.1,  101.6),
'125x050':(  139.8,   60.5,  127.0),
'125x065':(  139.8,   76.3,  127.0),
'125x080':(  139.8,   89.1,  127.0),
'125x100':(  139.8,  114.3,  127.0),
'150x065':(  165.2,   76.3,  139.7),
'150x080':(  165.2,   89.1,  139.7),
'150x100':(  165.2,  114.3,  139.7),
'150x125':(  165.2,  139.8,  139.7),
'200x100':(  216.3,  114.3,  152.4),
'200x125':(  216.3,  139.8,  152.4),
'200x150':(  216.3,  165.2,  152.4),
'250x100':(  267.4,  114.3,  177.8),
'250x125':(  267.4,  139.8,  177.8),
'250x150':(  267.4,  165.2,  177.8),
'250x200':(  267.4,  216.3,  177.8),
'300x125':(  318.5,  139.8,  203.2),
'300x150':(  318.5,  165.2,  203.2),
'300x200':(  318.5,  216.3,  203.2),
'300x250':(  318.5,  267.4,  203.2),
'350x150':(  355.6,  165.2,  330.2),
'350x200':(  355.6,  216.3,  330.2),
'350x250':(  355.6,  267.4,  330.2),
'350x300':(  355.6,  318.5,  330.2),
'400x200':(  406.4,  216.3,  355.6),
'400x250':(  406.4,  267.4,  355.6),
'400x300':(  406.4,  318.5,  355.6),
'400x350':(  406.4,  355.6,  355.6),
'450x250':(  457.2,  267.4,  381.0),
'450x300':(  457.2,  318.5,  381.0),
'450x350':(  457.2,  355.6,  381.0),
'450x400':(  457.2,  406.4,  381.0),
'500x300':(  508.0,  318.5,  508.0),
'500x350':(  508.0,  355.6,  508.0),
'500x400':(  508.0,  406.4,  508.0),
'500x450':(  508.0,  457.2,  508.0),
'550x400':(  558.8,  406.4,  508.0),
'550x450':(  558.8,  457.2,  508.0),
'550x500':(  558.8,  508.8,  508.0),
'600x450':(  609.6,  457.2,  508.0),
'600x500':(  609.6,  508.0,  508.0),
'600x550':(  609.6,  558.8,  508.0),
'650x500':(  660.4,  508.0,  609.6),
'650x550':(  660.4,  558.8,  609.6),
'650x600':(  660.4,  609.6,  609.6),
'700x550':(  711.2,  558.8,  609.6),
'700x600':(  711.2,  609.6,  609.6),
'700x650':(  711.2,  660.4,  609.6),

}

#仕切弁　鋳鉄　JIS B 2031----------------------------------------
#                           ハンドル
#         L,    H(内), H(外), w,   a
gates_10k_cast={
'050':(  180,  300,   365,  200,  7),
'065':(  190,  330,   425,  200,  8),
'080':(  200,  380,   490,  224,  8),
'100':(  230,  430,   575,  250, 10),
'125':(  250,  490,   685,  280, 11),
'150':(  270,  560,   795,  300, 13),
'200':(  290,  650,  1000,  355, 15),
'250':(  330,  770,  1210,  400, 17),
'300':(  350,  885,  1420,  450, 19),
}

#仕切弁　ステンレス　JIS B 2031----------------------------------------
#                           ハンドル
#         L,    H(内), H(外), w,   a
gates_10k_SUS={
'050':(  178,  336,   336,  160,  7),
'065':(  190,  375,   375,  180,  8),
'080':(  203,  445,   445,  200,  8),
'100':(  229,  523,   523,  225, 10),
'125':(  254,  606,   606,  250, 11),
'150':(  267,  710,   710,  250, 13),
'200':(  292,  920,   920,  300, 15),
'250':(  330, 1117,  1117,  350, 17),
'300':(  356, 1324,  1324,  400, 19),
}

#逆止弁 鋳鉄　JIS B 2031----------------------------------------
#
#        d,   L,    H,   a,   d1,   R
checks_10k_cast={
'050':(  50,  200,  111,  7,  90,  120),
'065':(  65,  220,  121,  8, 115,  135),
'080':(  80,  240,  145,  8, 130,  150),
'100':( 100,  290,  165, 10, 165,  180),
'125':( 125,  360,  207, 11, 205,  250),
'150':( 150,  410,  225, 13, 240,  300),
'200':( 200,  500,  268, 15, 305,  370),
'250':( 250,  620,  319, 15, 305,  370),
'300':( 300,  700,  356, 15, 305,  370),
'350':( 350,  787,  381, 15, 305,  400),
}

#逆止弁 鋳鉄　水協----------------------------------------
#
#        d,   L,    H,   a,   d1,   R
checks_75k_cast={
'100':( 100,  290,  165, 10, 165,  180),
'125':( 125,  360,  207, 11, 205,  250),
'150':( 150,  410,  225, 13, 240,  300),
'200':( 200,  500,  268, 15, 290,  350),
'250':( 250,  620,  315, 15, 340,  300),
'300':( 300,  700,  356, 15, 390,  450),
'350':( 350,  787,  381, 15, 440,  500),

}

#逆止弁 青銅　JIS B 2031----------------------------------------
#
#        d,   L,    H
checks_10k_bronz={
'050':(  50,  200,  111),
'065':(  65,  220,  121),
'080':(  80,  240,  145),
'100':( 100,  290,  165),
'125':( 125,  360,  207),
'150':( 150,  410,  225),
'200':( 200,  500,  268),
'250':( 250,  620,  315),
'300':( 300,  700,  356),
}

#                 引っかかり　　外径/谷径　　　有効径　　　  内径/谷径   面取り      ナット高
#        ピッチP,    H1,     d/D,       d2/D2,    d1/D1,     dk,     m,     m1,    s0,    e0,  x0
regular={
'M3':(    0.50,   0.271,    3,        2.675,    2.459,      5.3,   2.4,  1.8,    5.5,   6.4, 0.0),
'M4':(    0.70,   0.379,    4,        3.545,    3.242,      6.8,   3.2,  2.4,    7.0,   8.1, 0.2),
'M5':(    0.80,   0.433,    5,        4.480,    4.134,      7.8,   4.0,  3.2,    8.0,   9.2, 0.0),
'M6':(    1.00,   0.541,    6,        5.350,    4.917,      9.8,   5.0,  3.6,   10.0,  11.5, 0.0),
'M8':(    1.25,   0.677,    8,        7.188,    6.647,     12.5,   6.5,  5.0,   13.0,  15.0, 0.0),
'M10':(   1.50,   0.812,   10,        9.026,    8.376,     16.5,   8.0,  6.0,   17.0,  19.6, 0.0),
'M12':(   1.75,   0.947,   12,       10.863,   10.106,     18.0,  10.0,  7.0,   19.0,  21.9, 0.2),
'M16':(   2.00,   1.083,   16,       14.701,   13.835,     23.0,  13.0, 10.0,   24.0,  27.7, 0.8),
'M20':(   2.50,   1.353,   20,       18.376,   17.294,     29.0,  16.0, 12.0,   30.0,  34.6, 1.0),
'M24':(   3.00,   1.624,   24,       22.051,   20.752,     34.0,  19.0, 14.0,   36.0,  41.6, 0.0),
'M30':(   3.50,   1.894,   30,       27.727,   26.211,     44.0,  24.0, 18.0,   46.0,  53.1, 0.0),
'M36':(   4.00,   2.165,   36,       33.402,   31.670,     53.0,  29.0, 21.0,   55.0,  63.5, 0.0)
}


class ViewProvider:
    def __init__(self, obj):
        obj.Proxy = self
 

class Ui_Dialog(object):#05
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(250, 320)
        Dialog.move(1000, 0)

        #材質
        self.label_material= QtGui.QLabel(Dialog)
        self.label_material.setGeometry(QtCore.QRect(20, 50, 50, 22))
        self.label_material.setObjectName("label_material")
        self.comboBox_material = QtGui.QComboBox(Dialog)
        self.comboBox_material.setGeometry(QtCore.QRect(70, 50, 160, 22))
        self.comboBox_material.setObjectName("comboBox_material")
        ta=mate[0:2]
        self.comboBox_material.clear()
        self.comboBox_material.addItems(ta)

        #管種
        self.label_lst= QtGui.QLabel(Dialog)
        self.label_lst.setGeometry(QtCore.QRect(20, 5, 160, 22))
        self.label_lst.setObjectName("label_lst")
        self.comboBox_lst = QtGui.QComboBox(Dialog)
        self.comboBox_lst.setGeometry(QtCore.QRect(70, 5, 160, 22))
        self.comboBox_lst.setObjectName("comboBox_lst")
        self.label_l= QtGui.QLabel(Dialog)
        self.label_l.setGeometry(QtCore.QRect(70, 28, 160, 22))
        self.label_l.setObjectName("label_l")
        #規格
        self.label_standard= QtGui.QLabel(Dialog)
        self.label_standard.setGeometry(QtCore.QRect(20, 73, 50, 22))
        self.label_standard.setObjectName("label_standard")
        self.comboBox_standard = QtGui.QComboBox(Dialog)
        self.comboBox_standard.setGeometry(QtCore.QRect(70, 73, 160, 22))
        self.comboBox_standard.setObjectName("comboBox_standard")
        #口径
        self.label_dia= QtGui.QLabel(Dialog)
        self.label_dia.setGeometry(QtCore.QRect(20, 96, 50, 22))
        self.label_dia.setObjectName("label_standard")
        self.comboBox_dia = QtGui.QComboBox(Dialog)
        self.comboBox_dia.setGeometry(QtCore.QRect(70, 96, 160, 20))
        self.comboBox_dia.setObjectName("comboBox_dia")
        #切管
        self.label_5 = QtGui.QLabel(Dialog)
        self.label_5.setGeometry(QtCore.QRect(100, 122, 61, 16))
        self.label_5.setObjectName("label_5")
        self.lineEdit_1 = QtGui.QLineEdit(Dialog)
        self.lineEdit_1.setGeometry(QtCore.QRect(160, 122, 50,15))
        self.lineEdit_1.setObjectName("lineEdit_1")
        #フェイス　ソリッド
        self.checkbox = QtGui.QCheckBox('フェイス',Dialog)
        self.checkbox.setGeometry(QtCore.QRect(20, 122, 61, 23))
        
        #ライセンスキー
        self.label_4 = QtGui.QLabel('***',Dialog)
        self.label_4.setGeometry(QtCore.QRect(75, 147, 170, 15))
        self.label_4.setObjectName("label_4")
        self.lineEdit = QtGui.QLineEdit(Dialog)
        self.lineEdit.setGeometry(QtCore.QRect(150, 149, 50, 15))
        self.lineEdit.setObjectName("lineEdit")

        self.pushButton_1 = QtGui.QPushButton(Dialog)
        self.pushButton_1.setGeometry(QtCore.QRect(200, 147, 40, 20))
        self.pushButton_1.setObjectName("pushButton_1")

        #Create
        self.pushButton = QtGui.QPushButton(Dialog)
        self.pushButton.setGeometry(QtCore.QRect(50, 172, 150, 20))
        self.pushButton.setObjectName("pushButton")
        #img
        self.label_img = QtGui.QLabel(Dialog)
        self.label_img.setGeometry(QtCore.QRect(0, 202, 250, 100))
        self.label_img.setText("")
        base=os.path.dirname(os.path.abspath(__file__))
        img_path = os.path.join(base, "data","JIS_Flange.png")
        self.label_img.setPixmap(QtGui.QPixmap(img_path))
        self.label_img.setAlignment(QtCore.Qt.AlignCenter)
        self.label_img.setObjectName("label_img")
        self.retranslateUi(Dialog)
        self.comboBox_lst.addItems(lst)

        self.comboBox_material.setCurrentIndex(1)
        self.comboBox_material.currentIndexChanged[int].connect(self.on_lst)
        self.comboBox_material.currentIndexChanged[int].connect(self.on_standard)
        self.comboBox_material.setCurrentIndex(0)

        self.comboBox_lst.setCurrentIndex(1)
        self.comboBox_lst.currentIndexChanged[int].connect(self.on_lst)
        self.comboBox_lst.currentIndexChanged[int].connect(self.on_lst2)
        self.comboBox_lst.currentIndexChanged[int].connect(self.on_standard)
        self.comboBox_lst.setCurrentIndex(0)

        self.comboBox_standard.setCurrentIndex(1)
        self.comboBox_standard.currentIndexChanged[int].connect(self.on_standard)
        self.comboBox_standard.setCurrentIndex(0)

        QtCore.QObject.connect(self.pushButton, QtCore.SIGNAL("pressed()"), self.f_create)
        QtCore.QObject.connect(self.pushButton_1, QtCore.SIGNAL("pressed()"), self.license)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        try:
            Dialog.setWindowTitle(QtGui.QApplication.translate("Dialog", "溶接継手", None, QtGui.QApplication.UnicodeUTF8))
            self.pushButton.setText(QtGui.QApplication.translate("Dialog", "Create", None, QtGui.QApplication.UnicodeUTF8))
            self.label_l.setText(QtGui.QApplication.translate("Dialog", "管材", None, QtGui.QApplication.UnicodeUTF8))
            self.label_lst.setText(QtGui.QApplication.translate("Dialog", "管材", None, QtGui.QApplication.UnicodeUTF8))
            self.label_standard.setText(QtGui.QApplication.translate("Dialog", "規格", None, QtGui.QApplication.UnicodeUTF8))
            self.label_dia.setText(QtGui.QApplication.translate("Dialog", "口径", None, QtGui.QApplication.UnicodeUTF8))
            self.label_material.setText(QtGui.QApplication.translate("Dialog", "材質", None, QtGui.QApplication.UnicodeUTF8))
            self.label_4.setText(QtGui.QApplication.translate("Dialog", "ライセンスキー", None, QtGui.QApplication.UnicodeUTF8))
            self.label_5.setText(QtGui.QApplication.translate("Dialog", "管長[mm]", None, QtGui.QApplication.UnicodeUTF8))
            self.pushButton_1.setText(QtGui.QApplication.translate("Dialog", "保存", None, QtGui.QApplication.UnicodeUTF8))

        except:
            Dialog.setWindowTitle(QtGui.QApplication.translate("Dialog", "溶接継手", None))
            self.pushButton.setText(QtGui.QApplication.translate("Dialog", "Create", None))
            self.label_l.setText(QtGui.QApplication.translate("Dialog", "管材", None))
            self.label_lst.setText(QtGui.QApplication.translate("Dialog", "管材", None))
            self.label_standard.setText(QtGui.QApplication.translate("Dialog", "規格", None))
            self.label_dia.setText(QtGui.QApplication.translate("Dialog", "口径", None))
            self.label_material.setText(QtGui.QApplication.translate("Dialog", "材質", None))
            self.label_4.setText(QtGui.QApplication.translate("Dialog", "ライセンスキー", None))
            self.label_5.setText(QtGui.QApplication.translate("Dialog", "管長[mm]", None))
            self.pushButton_1.setText(QtGui.QApplication.translate("Dialog", "保存", None))

    def on_lst3(self):
        material=self.comboBox_material.currentText()
        self.label_lst.setText(QtGui.QApplication.translate("Dialog", str(material), None))
        if material=='Carbon steel':
            ta=Tube_carbon
        elif material=='Stainless steel':
            ta=Tube_stainless
        self.comboBox_standard.clear()
        self.comboBox_standard.addItems(ta)

    def on_lst2(self):#管長
        if key=='05' or key=='06' or key=='07':
            L=5500
        else:
            L=''
        self.lineEdit_1.setText(QtGui.QApplication.translate("Dialog", str(L), None))
    def license(self):
        x = self.lineEdit.text()
        base=os.path.dirname(os.path.abspath(__file__))
        joined_path = os.path.join(base,"data","h_license.txt")
        with open(joined_path, mode='w') as ff:
            ff.write(x)
            ff.close()

    def on_lst(self):
        global key
        global ta
        global dia
        global sa
        global material
        global xlc
        #self.comboBox_standard.clear()
        key = self.comboBox_lst.currentText()[:2]
        sa=l_lst[key]
        b=sa
        try:
            self.label_l.setText(QtGui.QApplication.translate("Dialog", str(sa), None, QtGui.QApplication.UnicodeUTF8))
        except:
            self.label_l.setText(QtGui.QApplication.translate("Dialog", str(sa), None))
        pic='img_h' + key + '.png'
        base=os.path.dirname(os.path.abspath(__file__))
        joined_path = os.path.join(base, "data",pic)
        self.label_img.setPixmap(QtGui.QPixmap(joined_path))
        #xcf='2153987651329bc7526586915547'
        xcf='***'
        base=os.path.dirname(os.path.abspath(__file__))
        joined_path = os.path.join(base,"data","h_license.txt")
        ff= open(joined_path)
        data1 = ff.read()  # ファイル終端まで全て読んだデータを返す
        self.lineEdit.setText(QtGui.QApplication.translate("Dialog", str(data1), None))
        ff.close()
        self.label_standard.setText(QtGui.QApplication.translate("Dialog", "規格", None))
        if key=='00' or key=='09':#---------------------------------------------------------
            material=self.comboBox_material.currentText()
            if material=='Carbon steel':
                ta=flg_carbon
            elif material=='Stainless steel':
                if key=='00':
                    ta=flg_stainless
                elif key=='09':
                    ta=flg_stainless[:3]

        elif key=='01':
            material=self.comboBox_material.currentText()
            if material=='Carbon steel':
                ta=Elbow_carbon
            elif material=='Stainless steel':
                ta=Elbow_stainless

        elif key=='02':
            material=self.comboBox_material.currentText()
            if material=='Carbon steel':
                ta=Tee_carbon
            elif material=='Stainless steel':
                ta=Tee_stainless

        elif key=='03' or key=='04':
            material=self.comboBox_material.currentText()
            if material=='Carbon steel':
                ta=reduc_carbon
            elif material=='Stainless steel':
                ta=reduc_stainless

        elif key=='05' :
            material=self.comboBox_material.currentText()
            try:
                self.label_lst.setText(QtGui.QApplication.translate("Dialog", str(material), None, QtGui.QApplication.UnicodeUTF8))
            except:
                self.label_lst.setText(QtGui.QApplication.translate("Dialog", str(material), None))
            if material=='Carbon steel':
                ta=Tube_carbon
                #dia=tube_d[2:21]
            elif material=='Stainless steel':
                ta=Tube_stainless
                #dia=tube_d[3:17]

        elif key=='06' or key=='07':
            material=self.comboBox_material.currentText()
            if material=='Carbon steel':
                ta=s_flg_carbon
                #dia=flg_d[2:21]
            elif material=='Stainless steel':
                ta=s_flg_stainless
                #dia=flg_d[3:17]
        elif key=='08' :
            material=self.comboBox_material.currentText()
            if material=='Carbon steel':
                ta=Tube_carbon
                #dia=tube_d[3:21]
            elif material=='Stainless steel':
                ta=Tube_stainless
                #dia=tube_d[3:17]
        elif key=='10' :
            material=self.comboBox_material.currentText()
            ta=rap
        elif key=='11' or key=='12' :
            material=self.comboBox_material.currentText()
            ta=rap[1:2]
        elif key=='13' :
            material=self.comboBox_material.currentText()
            ta=check
        elif key=='14' :
            self.label_standard.setText(QtGui.QApplication.translate("Dialog", "偏芯量", None))
            material=self.comboBox_material.currentText()
            ta=exp_st
        elif key=='15' :
            self.label_standard.setText(QtGui.QApplication.translate("Dialog", "", None))
            material=self.comboBox_material.currentText()
            ta=rap[1:2]
        elif key=='16' :
            self.label_standard.setText(QtGui.QApplication.translate("Dialog", "偏芯量", None))
            material=self.comboBox_material.currentText()
            ta=exp_st    

        #xlc=xcf[13:17]
        xlc='***'

        self.comboBox_standard.clear()
        self.comboBox_standard.addItems(ta)
        self.comboBox_dia.clear()

    def on_standard(self):
        global st
        global dia
        st=self.comboBox_standard.currentText()
        material=self.comboBox_material.currentText()
        if key=='00' or key=='09':

            if material=='Carbon steel':
                if st=='JIS2k':
                    dia=flg_d[17:]
                elif st=='JIS5k':
                    dia=flg_d[:25]
                elif st=='JIS7.5k' :
                    dia=flg_75[:18]
                elif st=='JIS10k':
                    dia=flg_d[:25]
                elif st=='JIS16k' :
                    dia=flg_d[:20]
            elif material=='Stainless steel':
                if st=='JIS5k':
                    dia=flg_d[:21]
                elif st=='JIS7.5k' :
                    dia=flg_75[:10]
                elif st=='JIS10k':
                    dia=flg_d[:25]
                if key=='00':
                    if st=='JIS10k_Loose' or st=='JIS5k_Loose':
                        dia=flg_d[1:20]
        elif key=='01':
            material=self.comboBox_material.currentText()
            st=self.comboBox_standard.currentText()
            pic='img_' + st[:3] + '.png'
            base=os.path.dirname(os.path.abspath(__file__))
            joined_path = os.path.join(base, "data",pic)
            self.label_img.setPixmap(QtGui.QPixmap(joined_path))
            if material=='Carbon steel':
                if st[4:8]=='Long':
                    if st[-3:]=='SGP':
                        dia=flg_d[1:19]
                    else:
                        dia=flg_d[1:19]
                elif st[4:9]=='Short':
                    dia=flg_d[3:19]

                elif st[4:9]=='Large':
                    dia=flg_d[18:23]
            elif material=='Stainless steel':
                if st[4:8]=='Long':
                    dia=flg_d[1:15]
                elif st[4:9]=='Short':
                    if st[:3]=='090':
                        dia=flg_d[3:15]
        elif key=='02':
            material=self.comboBox_material.currentText()
            st=self.comboBox_standard.currentText()
            pic='img_tee' + '.png'
            base=os.path.dirname(os.path.abspath(__file__))
            joined_path = os.path.join(base, "data",pic)
            self.label_img.setPixmap(QtGui.QPixmap(joined_path))
            if material=='Carbon steel':
                if st=='Large':
                    dia=tee[59:]
                else:
                    dia=tee[:59]

            elif material=='Stainless steel':
                if st=='Sch10S' or st=='Sch20S':
                    dia=tee [:59]
                else:
                    dia=tee
        elif key=='03' or key=='04':
            material=self.comboBox_material.currentText()
            st=self.comboBox_standard.currentText()
            if key=='03':
                pic='img_reduc_c' + '.png'
            elif key=='04':
                pic='img_reduc_e' + '.png'
            base=os.path.dirname(os.path.abspath(__file__))
            joined_path = os.path.join(base, "data",pic)
            self.label_img.setPixmap(QtGui.QPixmap(joined_path))
            if material=='Carbon steel':
                if st=='SGP':
                    dia=reduc[:49]
                elif st=='Large':
                    dia=reduc[62:]
                else:
                    dia=reduc
            elif material=='Stainless steel':
                if st=='Sch10S' or st=='Sch20S':
                    self.label_lst.setText(QtGui.QApplication.translate("Dialog", str(st), None))
                    dia=reduc[:45]
                else:
                    dia=reduc[:45]
        elif key=='05':
            material=self.comboBox_material.currentText()
            st=self.comboBox_standard.currentText()
            dia=tube_d
        elif key=='06' or key=='07':
            st=self.comboBox_standard.currentText()
            if st[:3]=='SGP':
                if st[-7:]=='JIS7.5k' :
                    dia=flg_75[:15]
                elif st[-5:]=='JIS5k' or st[-6:]=='JIS10k':
                    dia=flg_d[:25]
                elif st[-6:]=='JIS16k' :
                    dia=flg_d
            else:
                if st[-7:]=='JIS7.5k' :
                    dia=flg_75[:10]
                elif st[-5:]=='JIS5k' or st[-6:]=='JIS10k':
                    dia=flg_d[:15]
                elif st[-6:]=='JIS16k' :
                    dia=flg_d[:15]

        elif key=='08':
            material=self.comboBox_material.currentText()
            st=self.comboBox_standard.currentText()
            dia=tube_d[3:]


        elif key=='10':
            st=self.comboBox_standard.currentText()
            material=self.comboBox_material.currentText()
            pic='img_Rap_joint' + '.png'
            base=os.path.dirname(os.path.abspath(__file__))
            joined_path = os.path.join(base, "data",pic)
            self.label_img.setPixmap(QtGui.QPixmap(joined_path))
            dia=flg_d[1:15]
        elif key=='11':
            st=self.comboBox_standard.currentText()
            material=self.comboBox_material.currentText()
            pic='img_Gate_Valve_fint' + '.png'
            base=os.path.dirname(os.path.abspath(__file__))
            joined_path = os.path.join(base, "data",pic)
            self.label_img.setPixmap(QtGui.QPixmap(joined_path))
            if st=='JIS5k':
                dia=flg_d[6:14]
            elif st=='JIS10k':
                dia=flg_d[6:15]
        elif key=='12':
            st=self.comboBox_standard.currentText()
            material=self.comboBox_material.currentText()
            pic='img_Gate_Valve_fext' + '.png'
            base=os.path.dirname(os.path.abspath(__file__))
            joined_path = os.path.join(base, "data",pic)
            self.label_img.setPixmap(QtGui.QPixmap(joined_path))
            if st=='JIS5k':
                dia=flg_d[6:14]
            elif st=='JIS10k':
                dia=flg_d[6:15]
        elif key=='13':
            st=self.comboBox_standard.currentText()
            material=self.comboBox_material.currentText()
            pic='img_Check_Valve_f' + '.png'
            base=os.path.dirname(os.path.abspath(__file__))
            joined_path = os.path.join(base, "data",pic)
            self.label_img.setPixmap(QtGui.QPixmap(joined_path))
            if st=='JIS7.5k':
                dia=flg_75[1:7]
            elif st=='JIS10k':
                dia=flg_d[6:16]
        elif key=='14':
            st=self.comboBox_standard.currentText()
            material=self.comboBox_material.currentText()
            if st=='20mm':
                pic='exp_20.png'
            elif st=='50mm':
                pic='exp_50.png'
            elif st=='100mm':
                pic='exp_100.png'
            elif st=='200mm':
                pic='exp_200.png'
            base=os.path.dirname(os.path.abspath(__file__))
            joined_path = os.path.join(base, "data",pic)
            self.label_img.setPixmap(QtGui.QPixmap(joined_path))
            dia=flg_d[2:20]
        elif key=='15':
            st=self.comboBox_standard.currentText()
            material=self.comboBox_material.currentText()
            pic='img_flex_joint.png'
            base=os.path.dirname(os.path.abspath(__file__))
            joined_path = os.path.join(base, "data",pic)
            self.label_img.setPixmap(QtGui.QPixmap(joined_path))
            dia=flg_d[2:15]
        elif key=='16':
            st=self.comboBox_standard.currentText()
            material=self.comboBox_material.currentText()
            if st=='20mm':
                pic='exp_20.png'
            elif st=='50mm':
                pic='exp_50.png'
            elif st=='100mm':
                pic='exp_100.png'
            elif st=='200mm':
                pic='exp_200.png'
            base=os.path.dirname(os.path.abspath(__file__))
            joined_path = os.path.join(base, "data",pic)
            self.label_img.setPixmap(QtGui.QPixmap(joined_path))
            dia=flg_75[1:7]    

        self.comboBox_dia.clear()
        self.comboBox_dia.addItems(dia)

    def f_create(self):
        lsky=self.lineEdit.text()
        if lsky != xlc:
            if key > '04':
               lsk='ライセンスキーを入力してください。'
               try:
                   self.label_l.setText(QtGui.QApplication.translate("Dialog", lsk, None, QtGui.QApplication.UnicodeUTF8))
               except:
                   self.label_l.setText(QtGui.QApplication.translate("Dialog", lsk, None))
                   return

        def Flange(self):
           global c1
           global k0
           global d0
           global d2
           global d4
           global d5
           global E0
           global n0

           if key=='14':
               st='JIS10k'
           else:
               st=self.comboBox_standard.currentText()

           k_index=st.find('_')
           st=st[k_index+1:]
           if material=='Carbon steel':
               C0=0

               if st=='JIS2k' or st[-5:]=='JIS2k':
                   sa = JIS2k[key_1]
               elif st=='JIS5k':
                   sa = JIS5k[key_1]
               elif st=='JIS7.5k' or st[-7:]=='JIS7.5k':
                   sa = JIS75k[key_1]
               elif st=='JIS10k' or st[-6:]=='JIS10k':
                   sa = JIS10k[key_1]
               elif st=='JIS16k' or st[-6:]=='JIS16k':
                   sa = JIS16k[key_1]
               elif st=='JIS10k_Loose' or st[-12:]=='JIS10k_Loose':
                   sa = JIS10k[key_1]
           elif material=='Stainless steel':
               C0=0
               if st=='JIS5k' or st[-5:]=='JIS5k':
                   sa = JIS5k[key_1]
               elif st=='JIS7.5k' or st[-7:]=='JIS7.5k':
                   sa = JIS75k[key_1]
               elif st=='JIS10k' or st[-6:]=='JIS10k':
                   sa = JIS10k[key_1]
               elif st=='JIS10k_Loose' or st[-12:]=='JIS10k_Loose':
                   sa = JIS5k[key_1]
                   C0=sa[11]
                   sa = JIS10k[key_1]
               elif st=='JIS5k_Loose' or st[-11:]=='JIS5k_Loose':
                   sa = JIS5k[key_1]
                   C0=sa[11]

           d0=float(sa[0])
           d2=float(sa[1])
           d4=float(sa[2])
           d5=float(sa[3])
           k0=float(sa[4])
           E0=float(sa[5])
           n0=sa[6]
           a0=0
           b0=0
           t0=0
           r0=0
           p1=(d2/2,0,0)
           p2=(d5/2,0,0)
           p3=(d5/2,0,k0)
           p4=(b0/2,0,k0)
           p5=(a0/2,0,t0)
           p6=(d2/2,0,t0)
           p7=(d2/2+C0,0,0)
           p8=(d2/2,0,C0)
           plist=[p1,p2,p3,p4,p5,p6,p1]
           pwire=Part.makePolygon(plist)
           pface = Part.Face(pwire)
           c1=pface.revolve(Base.Vector(0,0,0),Base.Vector(0,0,1),360)
           c2=Part.makeCylinder(d2/2,k0)
           c1=c1.cut(c2)
           #Part.show(c1)
           if st=='JIS10k_Loose' or st=='JIS5k_Loose':
               plist=[p1,p7,p8,p1]
               pwire=Part.makePolygon(plist)
               pface = Part.Face(pwire)
               c22=pface.revolve(Base.Vector(0,0,0),Base.Vector(0,0,1),360)
               c1=c1.cut(c22)
           ks=0
           for i in range(n0):
               k=2*math.pi/n0
               r=d4/2
               if i==0:
                   x=r*math.cos(k/2)
                   y=r*math.sin(k/2)
               else:
                   ks=i*k+k/2
                   x=r*math.cos(ks)
                   y=r*math.sin(ks)
               c3 = Part.makeCylinder(E0/2,k0,Base.Vector(x,y,0),Base.Vector(0,0,1))
               if i==0:
                   c1=c1.cut(c3)
               else:
                   c1=c1.cut(c3)


           #Part.show(c1)
        def Flange2(self):
           global c1
           global k0
           key_1=self.comboBox_dia.currentText()
           if material=='Carbon steel':
               if st=='JIS2k' or st[-5:]=='JIS2k':
                   sa = JIS2k[key_1]
               elif st=='JIS5k' or st[-5:]=='JIS5k':
                   sa = JIS5k[key_1]
               elif st=='JIS7.5k' or st[-7:]=='JIS7.5k':
                   sa = JIS75k[key_1]
               elif st=='JIS10k' or st[-6:]=='JIS10k':
                   sa = JIS10k[key_1]
               elif st=='JIS16k' or st[-6:]=='JIS16k':
                   sa = JIS16k[key_1]
               elif st=='JIS10k_Loose' or st[-12:]=='JIS10k_Loose':
                   sa = JIS10k[key_1]
           elif material=='Stainless steel':
               if st=='JIS5k' or st[-5:]=='JIS5k':
                   sa = JIS5k[key_1]
               elif st=='JIS7.5k' or st[-7:]=='JIS7.5k':
                   sa = JIS75k[key_1]
               elif st=='JIS10k' or st[-6:]=='JIS10k':
                   sa = JIS5k[key_1]
               elif st=='JIS10k_Loose' or st[-12:]=='JIS10k_Loose':
                   sa = JIS5k[key_1]
           d0=float(sa[0])
           d2=float(sa[1])
           d4=float(sa[2])
           d5=float(sa[3])
           k0=float(sa[4])
           E0=float(sa[5])
           n0=sa[6]
           a0=0
           b0=0
           t0=0
           r0=0
           p1=(d2/2,0,0)
           p2=(d5/2,0,0)
           p3=(d5/2,0,k0)
           p4=(b0/2,0,k0)
           p5=(a0/2,0,t0)
           p6=(d2/2,0,t0)
           plist=[p1,p2,p3,p4,p5,p6,p1]
           pwire=Part.makePolygon(plist)
           pface = Part.Face(pwire)
           c1=pface.revolve(Base.Vector(0,0,0),Base.Vector(0,0,1),360)
           #c2=Part.makeCylinder(d2/2,k0)
           #c1=c1.cut(c2)
           if st[-9:]=='JIS10k_Loose':
               C0=sa[11]
               p7=(d2/2+C0,0,0)
               p8=(d2/2,0,C0)
               plist=[p1,p7,p8,p1]
               pwire=Part.makePolygon(plist)
               pface = Part.Face(pwire)
               c22=pface.revolve(Base.Vector(0,0,0),Base.Vector(0,0,1),360)
               c1=c1.cut(c22)
           ks=0
           for i in range(n0):
               k=2*math.pi/n0
               r=d4/2
               if i==0:
                   x=r*math.cos(k/2)
                   y=r*math.sin(k/2)
               else:
                   ks=i*k+k/2
                   x=r*math.cos(ks)
                   y=r*math.sin(ks)
               c3 = Part.makeCylinder(E0/2,k0,Base.Vector(x,y,0),Base.Vector(0,0,1))
               if i==0:
                   c1=c1.cut(c3)
               else:
                   c1=c1.cut(c3)

        if key=='00' :
            global c1
            global st
            key_1=self.comboBox_dia.currentText()
            st=self.comboBox_standard.currentText()
            if key=='14':
               st='JIS10k'
            else:
               st=self.comboBox_standard.currentText()
            k_index=st.find('_')
            st=st[k_index+1:]
            if material=='Carbon steel':
                C0=0
                if st=='JIS2k' or st[-5:]=='JIS2k':
                    sa = JIS2k[key_1]
                elif st=='JIS5k':
                     sa = JIS5k[key_1]
                elif st=='JIS7.5k' or st[-7:]=='JIS7.5k':
                     sa = JIS75k[key_1]
                elif st=='JIS10k' or st[-6:]=='JIS10k':
                     sa = JIS10k[key_1]
                elif st=='JIS16k' or st[-6:]=='JIS16k':
                     sa = JIS16k[key_1]
                elif st=='JIS10k_Loose' or st[-12:]=='JIS10k_Loose':
                     sa = JIS10k[key_1]
            elif material=='Stainless steel':
                C0=0
                if st=='JIS5k' or st[-5:]=='JIS5k':
                    sa = JIS5k[key_1]
                elif st=='JIS7.5k' or st[-7:]=='JIS7.5k':
                    sa = JIS75k[key_1]
                elif st=='JIS10k' or st[-6:]=='JIS10k':
                    sa = JIS10k[key_1]
                elif st=='JIS10k_Loose' or st[-12:]=='JIS10k_Loose':
                    sa = JIS5k[key_1]
                    C0=sa[11]
                    sa = JIS10k[key_1]
                elif st=='JIS5k_Loose' or st[-11:]=='JIS5k_Loose':
                    sa = JIS5k[key_1]
                    C0=sa[11]

            d0=float(sa[0])
            d2=float(sa[1])
            d4=float(sa[2])
            d5=float(sa[3])
            k0=float(sa[4])
            E0=float(sa[5])
            n0=sa[6]

            label = 'Flange_' + st + " " + key_1 + "_"
            obj = App.ActiveDocument.addObject("Part::FeaturePython",label)
            obj.addProperty("App::PropertyString", "key",label).key=key
            obj.addProperty("App::PropertyFloat", "d0",label).d0=d0
            obj.addProperty("App::PropertyFloat", "d2",label).d2=d2
            obj.addProperty("App::PropertyFloat", "d4",label).d4=d4
            obj.addProperty("App::PropertyFloat", "d5",label).d5=d5
            obj.addProperty("App::PropertyFloat", "k0",label).k0=k0
            obj.addProperty("App::PropertyFloat", "E0",label).E0=E0
            obj.addProperty("App::PropertyInteger", "n0",label).n0=n0
            obj.addProperty("App::PropertyFloat", "C0",label).C0=C0
            ParamWeldStlPipe.welded_p(obj)
            obj.ViewObject.Proxy=0
            FreeCAD.ActiveDocument.recompute()     
        elif key=='01':
            key_1=str(self.comboBox_dia.currentText())
            st=self.comboBox_standard.currentText()
            sa = elbo[key_1]
            sa1 = str_tube[key_1]
            d2=float(sa[0])/2
            if st[4:8]=='Long' or st[4:9]=='Large':
                r=float(sa[1])
            elif st[4:9]=='Short':
                r=float(sa[2])
            if st[-3:]=='SGP':
                t=float(sa1[1])
            elif st[-5:]=='Sch40':
                t=float(sa1[3])
            elif st[-5:]=='Sch80':
                t=float(sa1[5])
            if st[-6:]=='Sch10S':
                t=float(sa1[6])
            elif st[-6:]=='Sch20S':
                t=float(sa1[7])
            if st[:3]=='045':
                s=22.5
            elif st[:3]=='090':
                s=45
            elif st[:3]=='180':
                s=90
            d0=d2-t
            edge1 = Part.makeCircle(r, Base.Vector(r,0,0), Base.Vector(0,0,1), 180-2*s, 180)
            edge2 = Part.makeCircle(d2, Base.Vector(0,0,0), Base.Vector(0,1,0), 0, 360)
            edge3 = Part.makeCircle(d0, Base.Vector(0,0,0), Base.Vector(0,1,0), 0, 360)
            aWire = Part.Wire([edge1])
            profile = Part.Wire([edge2])
            profile1 = Part.Wire([edge3])
            makeSolid=True
            isFrenet=True
            c1 = Part.Wire(aWire).makePipeShell([profile],makeSolid,isFrenet)
            c2 = Part.Wire(aWire).makePipeShell([profile1],makeSolid,isFrenet)
            c1=c1.cut(c2)
            doc=App.ActiveDocument
            label = 'Elbow_' + st + " " + key_1 + "_"
            F_Obj = doc.addObject("Part::Feature",label)
            F_Obj.Shape=c1

        elif key=='02':
            global key_2
            global key_3
            key_1=str(self.comboBox_dia.currentText())
            st=self.comboBox_standard.currentText()
            sa = tees[key_1]
            d1=float(sa[0])/2
            d2=float(sa[1])/2
            C=float(sa[2])
            M=float(sa[3])
            key_2=str(self.comboBox_dia.currentText())[:3]
            key_3=str(self.comboBox_dia.currentText())[4:7]
            sa1=str_tube[key_2]
            sa2=str_tube[key_3]
            if st=='SGP' or st=='Large':
                t1=float(sa1[1])
                t2=float(sa2[1])
            elif st=='Sch40':
                t1=float(sa1[3])
                t2=float(sa2[3])
            elif st=='Sch80':
                t1=float(sa1[5])
                t2=float(sa2[5])
            elif st=='Sch10S':
                t1=float(sa1[7])
                t2=float(sa2[7])
            elif st=='Sch20S':
                t1=float(sa1[8])
                t2=float(sa2[8])
            d01=d1-t1
            d02=d2-t2
            c1 = Part.makeCylinder(d1,2*C,Base.Vector(0,0,0),Base.Vector(1,0,0))
            c01 = Part.makeCylinder(d01,2*C,Base.Vector(0,0,0),Base.Vector(1,0,0))
            c2 = Part.makeCylinder(d2,M,Base.Vector(C,0,0),Base.Vector(0,1,0))
            c02 = Part.makeCylinder(d02,M,Base.Vector(C,0,0),Base.Vector(0,1,0))
            c1=c1.fuse(c2)
            c1=c1.cut(c01)
            c1=c1.cut(c02)
            doc=App.ActiveDocument
            label = 'Tee_' + st + " " + key_1 + "_"
            F_Obj = doc.addObject("Part::Feature",label)
            F_Obj.Shape=c1

        elif key=='03':
            key_1=str(self.comboBox_dia.currentText())
            st=self.comboBox_standard.currentText()
            sa = reducs[key_1]
            d1=float(sa[0])/2
            d2=float(sa[1])/2
            H=float(sa[2])
            key_2=str(self.comboBox_dia.currentText())[:3]
            key_3=str(self.comboBox_dia.currentText())[4:7]
            sa1=str_tube[key_2]
            sa2=str_tube[key_3]
            if st=='SGP' or st=='Large':
                t1=float(sa1[1])
                t2=float(sa2[1])
            elif st=='Sch40':
                t1=float(sa1[3])
                t2=float(sa2[3])
            elif st=='Sch80':
                t1=float(sa1[5])
                t2=float(sa2[5])
            elif st=='Sch10S':
                t1=float(sa1[7])
                t2=float(sa2[7])
            elif st=='Sch20S':
                t1=float(sa1[8])
                t2=float(sa2[8])
            d01=d1-t1#大径
            d02=d2-t2#小径
            x=0.1*H
            p1=(0,d02,0)
            p2=(0,d2,0)
            p3=(x,d2,0)
            p4=(H-x,d1,0)
            p5=(H,d1,0)
            p6=(H,d01,0)
            p7=(H-x,d01,0)
            p8=(x,d02,0)
            plist=[p1,p2,p3,p4,p5,p6,p7,p8,p1]
            pwire=Part.makePolygon(plist)
            pface = Part.Face(pwire)
            c1=pface.revolve(Base.Vector(0,0,0),Base.Vector(1,0,0),360)
            doc=App.ActiveDocument
            label = 'Reducer_concentric_' + st + "_" + key_1 + "_"
            F_Obj = doc.addObject("Part::Feature",label)
            F_Obj.Shape=c1
 
        elif key=='04':
            key_1=str(self.comboBox_dia.currentText())
            st=self.comboBox_standard.currentText()
            sa = reducs[key_1]
            d1=float(sa[0])/2
            d2=float(sa[1])/2
            H=float(sa[2])
            key_2=str(self.comboBox_dia.currentText())[:3]
            key_3=str(self.comboBox_dia.currentText())[4:7]
            sa1=str_tube[key_2]
            sa2=str_tube[key_3]
            if st=='SGP' or st=='Large':
                t1=float(sa1[4])
                t2=float(sa2[5])
            elif st=='Sch40':
                t1=float(sa1[6])
                t2=float(sa2[7])
            elif st=='Sch80':
                t1=float(sa1[8])
                t2=float(sa2[9])
            elif st=='Sch10S':
                t1=float(sa1[7])
                t2=float(sa2[7])
            elif st=='Sch20S':
                t1=float(sa1[8])
                t2=float(sa2[8])
            d01=d1-t1#大径
            d02=d2-t2#小径
            p1=(0,0,0)
            p2=(0.1*H,0,0)
            p3=(0.9*H,0,d1-d2)
            p4=(H,0,d1-d2)
            line_1=Part.makeLine(p1,p2)
            line_2=Part.makeLine(p2,p3)
            line_3=Part.makeLine(p3,p4)
            edge2 = Part.makeCircle(d2, Base.Vector(0,0,0), Base.Vector(1,0,0),0, 360)
            edge3 = Part.makeCircle(d2, Base.Vector(.1*H,0,0), Base.Vector(1,0,0),0, 360)
            edge4 = Part.makeCircle(d1, Base.Vector(0.9*H,0,d1-d2), Base.Vector(1,0,0),0, 360)
            edge5 = Part.makeCircle(d1, Base.Vector(H,0,d1-d2), Base.Vector(1,0,0),0, 360)
            edge02 = Part.makeCircle(d02, Base.Vector(0,0,0), Base.Vector(1,0,0),0, 360)
            edge03 = Part.makeCircle(d02, Base.Vector(.1*H,0,0), Base.Vector(1,0,0),0, 360)
            edge04 = Part.makeCircle(d01, Base.Vector(0.9*H,0,d1-d2), Base.Vector(1,0,0),0, 360)
            edge05 = Part.makeCircle(d01, Base.Vector(H,0,d1-d2), Base.Vector(1,0,0),0, 360)
            Solid=True
            ruled=False
            closed=False
            maxDegree=5
            profile1=Part.Wire(edge2)
            profile2=Part.Wire(edge3)
            profile3=Part.Wire(edge4)
            profile4=Part.Wire(edge5)
            profile01=Part.Wire(edge02)
            profile02=Part.Wire(edge03)
            profile03=Part.Wire(edge04)
            profile04=Part.Wire(edge05)
            c1= Part.makeLoft([profile1,profile2,profile3,profile4],Solid,ruled,closed,maxDegree)
            c01= Part.makeLoft([profile01,profile02,profile03,profile04],Solid,ruled,closed,maxDegree)
            c1= c1.cut(c01)
            doc=App.ActiveDocument
            label = 'Reducer_eccentric_' + st + "_" + key_1 + "_"
            F_Obj = doc.addObject("Part::Feature",label)
            F_Obj.Shape=c1

        elif key=='05' :
            key_1=str(self.comboBox_dia.currentText())[:3]
            st=self.comboBox_standard.currentText()
            sa = str_tube[key_1]
            if st=='SGP':
                t=float(sa[1])
            elif st=='Sch20':
                t=float(sa[2])
            elif st=='Sch40':
                t=float(sa[3])
            elif st=='Sch80':
                t=float(sa[5])
            elif st=='Sch10S':
                t=float(sa[7])
            elif st=='Sch20S':
                t=float(sa[8])
            d2=float(sa[0])
            d0=d2-t
            L=float(self.lineEdit_1.text())
            label = 'Straight_tube_' + st + " " + key_1 +"_"
            obj = App.ActiveDocument.addObject("Part::FeaturePython",label)
            obj.addProperty("App::PropertyString", "key",label).key=key
            obj.addProperty("App::PropertyFloat", "d2",label).d2=d2
            obj.addProperty("App::PropertyFloat", "L",label).L=L
            obj.addProperty("App::PropertyFloat", "t",label).t=t
            ParamWeldStlPipe.welded_p(obj)
            obj.ViewObject.Proxy=0
            FreeCAD.ActiveDocument.recompute()   

        elif key=='06' or key=='07':
            key_1=self.comboBox_dia.currentText()
            st=self.comboBox_standard.currentText()
            if key=='14':
               st='JIS10k'
            else:
               st=self.comboBox_standard.currentText()
            k_index=st.find('_')
            st=st[k_index+1:]
            if material=='Carbon steel':
                C0=0
                if st=='JIS2k' or st[-5:]=='JIS2k':
                    sa = JIS2k[key_1]
                elif st=='JIS5k':
                     sa = JIS5k[key_1]
                elif st=='JIS7.5k' or st[-7:]=='JIS7.5k':
                     sa = JIS75k[key_1]
                elif st=='JIS10k' or st[-6:]=='JIS10k':
                     sa = JIS10k[key_1]
                elif st=='JIS16k' or st[-6:]=='JIS16k':
                     sa = JIS16k[key_1]
                elif st=='JIS10k_Loose' or st[-12:]=='JIS10k_Loose':
                     sa = JIS10k[key_1]
            elif material=='Stainless steel':
                C0=0
                if st=='JIS5k' or st[-5:]=='JIS5k':
                    sa = JIS5k[key_1]
                elif st=='JIS7.5k' or st[-7:]=='JIS7.5k':
                    sa = JIS75k[key_1]
                elif st=='JIS10k' or st[-6:]=='JIS10k':
                    sa = JIS10k[key_1]
                elif st=='JIS10k_Loose' or st[-12:]=='JIS10k_Loose':
                    sa = JIS5k[key_1]
                    C0=sa[11]
                    sa = JIS10k[key_1]
                elif st=='JIS5k_Loose' or st[-11:]=='JIS5k_Loose':
                    sa = JIS5k[key_1]
                    C0=sa[11]
            d0=float(sa[0])
            d2=float(sa[1])
            d4=float(sa[2])
            d5=float(sa[3])
            k0=float(sa[4])
            E0=float(sa[5])
            n0=sa[6]
            sa = str_tube[key_1]
            st=self.comboBox_standard.currentText()
            if st[:3]=='SGP':
                t=float(sa[1])
            elif st[:5]=='Sch20':
                t=float(sa[2])
            elif st[:5]=='Sch40':
                t=float(sa[3])
            elif st[:5]=='Sch80':
                t=float(sa[5])
            elif st[:6]=='Sch10S':
                t=float(sa[7])
            elif st[:6]=='Sch20S':
                t=float(sa[8])
            L=float(self.lineEdit_1.text())
            label = 'Flange_' + st + " " + key_1 + "_"
            obj = App.ActiveDocument.addObject("Part::FeaturePython",label)
            obj.addProperty("App::PropertyString", "key",label).key=key
            obj.addProperty("App::PropertyFloat", "d0",label).d0=d0
            obj.addProperty("App::PropertyFloat", "d2",label).d2=d2
            obj.addProperty("App::PropertyFloat", "d4",label).d4=d4
            obj.addProperty("App::PropertyFloat", "d5",label).d5=d5
            obj.addProperty("App::PropertyFloat", "k0",label).k0=k0
            obj.addProperty("App::PropertyFloat", "E0",label).E0=E0
            obj.addProperty("App::PropertyInteger", "n0",label).n0=n0
            obj.addProperty("App::PropertyFloat", "C0",label).C0=C0
            obj.addProperty("App::PropertyFloat", "L",'Pipe').L=L
            obj.addProperty("App::PropertyFloat", "t",'Pipe').t=t
            ParamWeldStlPipe.welded_p(obj)
            obj.ViewObject.Proxy=0
            FreeCAD.ActiveDocument.recompute() 

        elif key=='08' :
            b='Cap_'
            key_1=self.comboBox_dia.currentText()
            st=self.comboBox_standard.currentText()
            sa=str_tube[key_1]
            if st=='SGP':
                t=float(sa[1])
            elif st=='Sch20':
                t=float(sa[2])
            elif st=='Sch40':
                t=float(sa[3])
            elif st=='Sch80':
                t=float(sa[5])
            elif st=='Sch10S':
                t=float(sa[7])
            elif st=='Sch20S':
                t=float(sa[8])
            d2=float(sa[0])/2
            H=float(sa[10])
            d0=d2-t
            D=2*d0
            R0=D
            r=0.1*D
            h=0.194*D
            L=H-h
            x=d0-r
            s=45.00
            x1=x+r*math.cos(math.radians(s))
            s2=math.degrees(math.asin(x1/R0))
            x11=R0*math.sin(math.radians(15))
            y11=R0*math.cos(math.radians(15))+(H-R0)
            x2=H-R0
            p1=(d0,0,0)
            p2=(d0,L,0)
            p3=(x+r*math.cos(math.radians(s)),L+r*math.sin(math.radians(s)),0)
            p4=(0,H,0)
            p5=(0,x2,0)
            p6=(d2,0,0)
            p7=(d2,L,0)
            p8=(x+(r+t)*math.cos(math.radians(s)),L+(r+t)*math.sin(math.radians(s)),0)
            p9=(0,H+t,0)
            p10=(x,L,0)
            p11=(-d0,0,0)
            edge1 = Part.makeLine(p1,p2)
            edge2 = Part.makeCircle(r, Base.Vector(x,L,0), Base.Vector(0,0,1),0, s)
            edge3=Part.Arc(Base.Vector((x+r*math.cos(math.radians(s))),L+r*math.sin(math.radians(s)),0),Base.Vector(R0*math.sin(math.radians(15)),R0*math.cos(math.radians(15))+(H-R0),0),Base.Vector(0,H,0)).toShape()
            edge4 = Part.makeLine(p1,p6)
            edge5 = Part.makeLine(p6,p7)
            edge6 = Part.makeCircle(r+t, Base.Vector(x,L,0), Base.Vector(0,0,1),0, s)
            edge7=Part.Arc(Base.Vector((x+(r+t)*math.cos(math.radians(s))),L+(r+t)*math.sin(math.radians(s)),0),Base.Vector((R0+t)*math.sin(math.radians(15)),(R0+t)*math.cos(math.radians(15))+(H-R0),0),Base.Vector(0,H+t,0)).toShape()
            edge8 = Part.makeLine(p4,p9)
            aWire=Part.Wire([edge1,edge2,edge3,edge4,edge5,edge6,edge7,edge8])
            pface=Part.Face(aWire)
            c1=pface.revolve(Base.Vector(0,0,0),Base.Vector(0,1,0),360)
            doc=App.ActiveDocument
            label = b + st + "_" + key_1 +"_"
            F_Obj = doc.addObject("Part::Feature",label)
            F_Obj.Shape=c1

        elif key=='09':
            b='Flange_lid_'
            key_1=self.comboBox_dia.currentText()
            st=self.comboBox_standard.currentText()
            if material=='Carbon steel':
                if st=='JIS2k':
                    sa = JIS2k[key_1]
                elif st=='JIS5k' :
                    sa = JIS5k[key_1]
                elif st=='JIS7.5k':
                    sa = JIS75k[key_1]
                elif st=='JIS10k':
                    sa = JIS10k[key_1]
                elif st=='JIS16k':
                    sa = JIS16k[key_1]
                elif st=='JIS10k_Loose':
                    sa = JIS10k[key_1]
            elif material=='Stainless steel':
                if st=='JIS5k' :
                    sa = JIS5k[key_1]
                elif st=='JIS7.5k':
                    sa = JIS75k[key_1]
                elif st=='JIS10k':
                    sa = JIS5k[key_1]
            d4=float(sa[2])/2
            d5=float(sa[3])/2
            t=float(sa[4])
            E0=float(sa[5])/2
            n0=sa[6]
            c1 = Part.makeCylinder(d5,t,Base.Vector(0,0,0),Base.Vector(0,0,1))
            ks=0
            for i in range(n0):
                k=2*math.pi/n0
                r=d4
                if i==0:
                    x=r*math.cos(k/2)
                    y=r*math.sin(k/2)
                else:
                    ks=i*k+k/2
                    x=r*math.cos(ks)
                    y=r*math.sin(ks)
                c3 = Part.makeCylinder(E0,t,Base.Vector(x,y,0),Base.Vector(0,0,1))
                if i==0:
                    c1=c1.cut(c3)
                else:
                    c1=c1.cut(c3)
            doc=App.ActiveDocument
            label = b + st +"_"+key_1+'_'
            F_Obj = doc.addObject("Part::Feature",label)
            F_Obj.Shape=c1

        elif key=='10' :#ラップジョイント
            st=self.comboBox_standard.currentText()
            key_1=self.comboBox_dia.currentText()
            b='Rap_joint'
            sa=raps[key_1]
            d3=float(sa[0])/2
            T=sa[1]
            F=sa[4]
            R=sa[5]
            if st=='JIS5k':
                G=float(sa[2])/2
            elif st=='JIS10k':
                G=float(sa[3])/2
            d0=d3-T
            p1=(0,d0,0)
            p2=(0,G,0)
            p3=(T,G,0)
            p4=(T,d3+R,0)
            p5=(T+R,d3+R,0)
            p6=(T+R,d3,0)
            p7=(F,d3,0)
            p8=(F,d0,0)
            edge1=Part.makeLine(p1,p2)
            edge2=Part.makeLine(p2,p3)
            edge3=Part.makeLine(p3,p4)
            edge4=Part.makeCircle(R, Base.Vector(T+R,d3+R,0), Base.Vector(0,0,1),180, 270)
            edge5=Part.makeLine(p6,p7)
            edge6=Part.makeLine(p7,p8)
            edge7=Part.makeLine(p8,p1)
            aWire=Part.Wire([edge1,edge2,edge3,edge4,edge5,edge6,edge7,])
            pface = Part.Face(aWire)
            c1=pface.revolve(Base.Vector(0,0,0),Base.Vector(1,0,0),360)
            doc=App.ActiveDocument
            label = b + st + "_" + key_1 + 'x' +str(F) +"_"
            F_Obj = doc.addObject("Part::Feature",label)
            F_Obj.Shape=c1

        elif key=='11' or key=='12':#gate valve(Internal)---------------------------------------------------
            #global M
            st=self.comboBox_standard.currentText()
            key_1=self.comboBox_dia.currentText()
            sa=JIS10k[key_1]
            d2=float(sa[1])
            M=sa[4]
            if material=='Carbon steel':
                sa1=gates_10k_cast[key_1]
            elif material=='Stainless steel':
                sa1=gates_10k_SUS[key_1]
            L=sa1[0]
            H1=sa1[1]
            H2=sa1[2]
            w=sa1[3]
            a1=sa1[4]
            Flange(self)
            c01=c1
            Flange(self)
            c02=c1
            c01.Placement=App.Placement(App.Vector(0,0,0),App.Rotation(App.Vector(0,1,0),90))
            c02.Placement=App.Placement(App.Vector(L-M,0,0),App.Rotation(App.Vector(0,1,0),90))
            c01=c01.fuse(c02)
            H=H1
            x2=0.4
            L1=L
            d21=d2+2*a1
            if key_1<='100':
                x3=0.25
            elif key_1<='200':
                x3=0.35
            else:
                x3=0.35
            w0=x2*L
            h0=d21+20
            LL=(L1-w0)/2
            p1=(0,d21/2,0)
            p2=(10,h0/2,0)
            p3=(10,d21/2,0)
            p4=(w0-10,h0/2,0)
            p5=(w0,d21/2,0)
            p6=(w0,-d21/2,0)
            p7=(w0,-d21/2,0)
            p8=(w0-10,-h0/2,0)
            p9=(w0-10,-d21/2,0)
            p10=(10,-h0/2,0)
            p11=(0,-d21/2,0)
            p12=(10,0,0)
            p13=(w0,0,0)
            p14=(0,0,0)
            edge1 = Part.makeCircle(10, Base.Vector(10,d21/2,0), Base.Vector(0,0,1), 90, 180)
            edge2 = Part.makeLine(p2,p4)
            edge3 = Part.makeCircle(10, Base.Vector(w0-10,d21/2,0), Base.Vector(0,0,1), 0, 90)
            edge4 = Part.makeLine(p5,p7)
            edge5 = Part.makeCircle(10, Base.Vector(w0-10,-d21/2,0), Base.Vector(0,0,1), 270, 360)
            edge6 = Part.makeLine(p8,p10)
            edge7 = Part.makeCircle(10, Base.Vector(10,-d21/2,0), Base.Vector(0,0,1), 180, 270)
            edge8 = Part.makeLine(p11,p1)
            aWire=Part.Wire([edge1,edge2,edge3,edge4,edge5,edge6,edge7,edge8])
            wface = Part.Face(aWire)
            wface.Placement=App.Placement(App.Vector(LL,0,0),App.Rotation(App.Vector(1,0,0),0))
            wface_k=wface
            c02=wface.extrude(Base.Vector(0,0,x3*H+2*0.7*M+3))#角柱下
            c01=c01.fuse(c02)
            edge1 = Part.makeCircle(10, Base.Vector(10,-d21/2,0), Base.Vector(0,0,1), 180, 270)
            edge2 = Part.makeLine(p10,p8)
            edge3 = Part.makeCircle(10, Base.Vector(w0-10,-d21/2,0), Base.Vector(0,0,1), 270, 360)
            edge4 = Part.makeLine(p11,p7)
            edge5 = Part.makeLine(p13,p7)
            edge6 = Part.makeLine(p13,p4)
            edge7 = Part.makeLine(p11,p14)
            edge8 = Part.makeLine(p13,p14)
            aWire1=Part.Wire([edge1,edge2,edge3,edge5,edge7,edge8])
            aWire11=Part.Wire([edge1,edge2,edge3,edge5,edge7,edge8])
            wface1 = Part.Face(aWire1)
            wface1.Placement=App.Placement(App.Vector(LL,0,0),App.Rotation(App.Vector(1,0,0),0))
            c03=wface1.revolve(Base.Vector(0,0.0,0.0),Base.Vector(1,0,0),180)
            c01=c01.fuse(c03)
            #フランジ
            zz=40
            x=(w0+zz)/2
            y=(h0+zz)/2
            p1=(0,d21/2,0)
            p2=(zz-10,y,0)
            p3=(2*x-zz+10,y,0)
            p4=(2*x,d21/2,0)
            p5=(2*x,-d21/2,0)
            p6=(2*x-zz+10,-y,0)
            p7=(zz-10,-y,0)
            p8=(0,-d21/2,0)
            p9=(zz-10,d21/2,0)
            p10=(2*x-zz+10,d21/2,0)
            p11=(zz-10,-d21/2,0)
            p12=(2*x-zz+10,-d21/2,0)
            edge1 = Part.makeCircle(zz-10, Base.Vector(p9), Base.Vector(0,0,1), 90, 180)
            edge2 = Part.makeLine(p2,p3)
            edge3 = Part.makeCircle(zz-10, Base.Vector(p10), Base.Vector(0,0,1), 0, 90)
            edge4 = Part.makeLine(p4,p5)
            edge5 = Part.makeCircle(zz-10, Base.Vector(p12), Base.Vector(0,0,1), 270, 360)
            edge6 = Part.makeLine(p6,p7)
            edge7 = Part.makeCircle(zz-10, Base.Vector(p11), Base.Vector(0,0,1), 180, 270)
            edge8 = Part.makeLine(p8,p1)
            aWire2=Part.Wire([edge1,edge2,edge3,edge4,edge5,edge6,edge7,edge8])
            wface2 = Part.Face(aWire2)
            wface2.Placement=App.Placement(App.Vector(LL-zz/2,0,x3*H),App.Rotation(App.Vector(0,0,1),0))
            c04=wface2.extrude(Base.Vector(0,0,0.7*M))#フランジ下
            c01=c01.fuse(c04)
            aWire3=Part.Wire([edge1,edge2,edge3,edge4,edge5,edge6,edge7,edge8])
            wface3 = Part.Face(aWire3)
            wface3.Placement=App.Placement(App.Vector(LL-zz/2,0,x3*H+0.7*M+3),App.Rotation(App.Vector(0,0,1),0))
            c05=wface3.extrude(Base.Vector(0,0,0.7*M))#フランジ上
            c01=c01.fuse(c05)
            wface4 = Part.Face(aWire11)
            wface4.Placement=App.Placement(App.Vector(LL,0,x3*H+2*0.7*M+3),App.Rotation(App.Vector(0,0,1),0))
            c06=wface4.revolve(Base.Vector(0,0,x3*H+2*0.7*M+3),Base.Vector(1,0,0),-180)
            c01=c01.fuse(c06)
            L0=h0-40
            if key_1<='075':
                L0=1.0*L0
                z1=x3*H+2*0.7*M+3+h0/2+10
            elif key_1<='200':
                L0=0.9*L0
                z1=x3*H+2*0.7*M+3+h0/2+10
            elif key_1<='250':
                L0=0.8*L0
                z1=x3*H+2*0.7*M+3+h0/2+20
            elif key_1<='300':
                L0=0.7*L0
                z1=x3*H+2*0.7*M+3+h0/2+50
            elif key_1<='500':
                L0=0.7*L0
                z1=x3*H+2*0.75*M+3+h0/2+60
            else:
                L0=0.5*L0
                z1=x3*H+2*0.7*M+3+h0/2+60
            w0=w0-0.1
            w1=w0-20
            h1=L0-20
            p1=(0,h1/2,0)
            p2=(10,L0/2,0)
            p3=(w0-10,L0/2,0)
            p4=(w0,h1/2,0)
            p5=(w0,-h1/2,0)
            p6=(w0-10,-L0/2,0)
            p7=(10,-L0/2,0)
            p8=(0,-h1/2,0)
            p9=(10,h1/2,0)
            p10=(w0-10,h1/2,0)
            p11=(w0-10,-h1/2,0)
            p12=(10,-h1/2,0)
            edge1 = Part.makeCircle(10, Base.Vector(10,h1/2,0), Base.Vector(0,0,1), 90, 180)
            edge2 = Part.makeLine(p2,p3)
            edge3 = Part.makeCircle(10, Base.Vector(w0-10,h1/2,0), Base.Vector(0,0,1), 0, 90)
            edge4 = Part.makeLine(p4,p5)
            edge5 = Part.makeCircle(10, Base.Vector(w0-10,-h1/2,0), Base.Vector(0,0,1), 270, 0)
            edge6 = Part.makeLine(p6,p7)
            edge7 = Part.makeCircle(10, Base.Vector(10,-h1/2,0), Base.Vector(0,0,1), 180, 270)
            edge8 = Part.makeLine(p8,p1)
            aWire5=Part.Wire([edge1,edge2,edge3,edge4,edge5,edge6,edge7,edge8])
            wface5 = Part.Face(aWire5)
            wface5.Placement=App.Placement(App.Vector((L1-w0)/2,0,0),App.Rotation(App.Vector(0,0,1),0))
            if key=='11':
                c07=wface5.extrude(Base.Vector(0,0,z1))#z1角柱
            elif key=='12':
                c07=wface5.extrude(Base.Vector(0,0,z1))#z1角柱
            c01=c01.fuse(c07)
            wface6 = Part.Face(aWire5)
            wface6.Placement=App.Placement(App.Vector((L1-w0)/2,0,z1+1),App.Rotation(App.Vector(0,0,1),0))
            if key=='11':
                c08=wface6.extrude(Base.Vector(0,0,0.7*M))
            elif key=='12':
                wface_k.Placement=App.Placement(App.Vector((L1-w0)/2,0,z1+1),App.Rotation(App.Vector(0,0,1),0))
                c08=wface6.extrude(Base.Vector(0,0,0.7*M))
            c01=c01.fuse(c08)
            c13= Part.makeCylinder(d21/2,L-2*M,Base.Vector(M,0,0),Base.Vector(1,0,0))
            c01=c01.fuse(c13)
            c14= Part.makeCylinder(d2/2,L-2*M,Base.Vector(M,0,0),Base.Vector(1,0,0))
            c01=c01.cut(c14)
            if key=='11':
                if key_1<='100':
                    Lb=20
                    B=20
                    C=16
                elif key_1<='150':
                    Lb=35
                    B=20
                    C=16
                elif key_1<='200':
                    Lb=40
                    B=25
                    C=20
                elif key_1<='250':
                    Lb=42
                    B=35
                    C=24
                elif key_1<='300':
                    Lb=45
                    B=35
                    C=24
                elif key_1<='400':
                    Lb=70
                    B=35
                    C=24
                elif key_1<='500':
                    Lb=100
                    B=35
                    C=24
                H=H1
                H0=H
                z10=x3*H+2*2*0.7*M+3
                c10= Part.makeCylinder(1.2*B/2,H-z10-30,Base.Vector(L1/2,0,z10),Base.Vector(0,0,1))
                c01=c01.fuse(c10)
                c12= Part.makeCylinder(C/2,35+C,Base.Vector(L1/2,0,H-30),Base.Vector(0,0,1))
                c01=c01.fuse(c12)
                #ハンドル
                boss= Part.makeCylinder(2*B/2,30,Base.Vector(L1/2,0,H-30),Base.Vector(0,0,1))
                boss_1= Part.makeCylinder(C/2,30,Base.Vector(L1/2,0,H-30),Base.Vector(0,0,1))
                boss=boss.cut(boss_1)
                torus=Part.makeTorus(w/2,10,Base.Vector(L1/2,0,H-15))
                c01=c01.fuse(torus)
                c01=c01.fuse(boss)
                #スポーク
                for i in range(3):
                    c2 = Part.makeCylinder(7.5,(w-B)/2,Base.Vector(B/2,0,H0-15),Base.Vector(1,0,0))
                    c2.Placement=App.Placement(App.Vector(L1/2,0,0),App.Rotation(App.Vector(0,0,1),i*120))
                    c01=c01.fuse(c2)
                #ナット
                key_2='M'+str(C)
                sa = regular[key_2]
                p=float(sa[0])
                H1=float(sa[1])
                D0=float(sa[2])/2
                D2=float(sa[3])/2
                D1=float(sa[4])/2
                dk=float(sa[5])/2
                m=float(sa[6])
                m1=float(sa[7])
                s0=float(sa[8])
                e0=float(sa[9])/2
                x0=float(sa[10])
                H00=0.866025*p
                x=H1+H00/4
                y=x*math.tan(math.pi/6)
                a=p/2-y
                #六角面
                x1=e0*math.cos(math.pi/6)
                y11=e0*math.sin(math.pi/6)
                p1=(x1,y11,0)
                p2=(0,e0,0)
                p3=(-x1,y11,0)
                p4=(-x1,-y11,0)
                p5=(0,-e0,0)
                p6=(x1,-y11,0)
                plist=[p1,p2,p3,p4,p5,p6,p1]
                w10=Part.makePolygon(plist)
                wface = Part.Face(w10)
                H=m
                c2=wface.extrude(Base.Vector(0,0,H))
                c3=Part.makeCylinder(D1,H)
                c2=c2.cut(c3)
                c2.Placement=App.Placement(App.Vector(L1/2,0,H0),App.Rotation(App.Vector(1,0,0),0))
                c01=c01.fuse(c2)
                doc=App.ActiveDocument
                label ='F_Gate valve(Internal)'+key_1+'A_'
                F_Obj = doc.addObject("Part::Feature",label)
                F_Obj.Shape=c01

            elif key=='12':
                H=H2
                w=sa1[3]
                if key_1<='100':
                    Lb1=40
                    Lb2=40
                    B1=20
                    C=10
                elif key_1<='200':
                    Lb1=40
                    Lb2=50
                    B1=30
                    C=15
                elif key_1<='250':
                    Lb1=40
                    Lb2=50
                    B1=40
                    C=15
                elif key_1<='300':
                    Lb1=50
                    Lb2=50
                    B1=40
                    C=15
                elif key_1<='500':
                    Lb1=50
                    Lb2=50
                    B1=40
                    C=15
                R=10
                t1=5
                z1=z1+1+0.7*M
                z2=z1+t1
                z3=H-d2*2
                z4=z3-Lb1
                z5=z4-(1+Lb2)
                Lb3=z5-z1
                #シャフト
                cc1= Part.makeCylinder(C,(H-z1),Base.Vector(L1/2,0,z1),Base.Vector(0,0,1))
                cc2= Part.makeCylinder(B1,Lb1,Base.Vector(L1/2,0,z4+2*R),Base.Vector(0,0,1))
                cc3= Part.makeCylinder(B1,Lb2,Base.Vector(L1/2,0,z5+2*R),Base.Vector(0,0,1))
                cc1=cc1.fuse(cc2)
                cc1=cc1.fuse(cc3)
                c01=c01.fuse(cc1)
                #サポート
                h0=0.8*h0
                if key_1<='200':
                    y3=z5+2*R+Lb2/2-z1+2*M
                else:
                    y3=z5+2*R+Lb2/2-z1+1.5*M
                y4=z1+M
                y5=y4+y3
                p1=(0,-h0/2+R,y4)
                p2=(0,-h0/2,y4+R)
                p3=(0,-h0/2,y5-R)
                p4=(0,-h0/2+R,y5)
                p5=(0,h0/2-R,y5)
                p6=(0,h0/2,y5-R)
                p7=(0,h0/2,y4+R)
                p8=(0,h0/2-R,y4)
                p9=(0,-h0/2+R,y5-R)
                p10=(0,-h0/2+R,y4+R)
                p11=(0,h0/2-R,y5-R)
                p12=(0,h0/2-R,y4+R)
                edge1 = Part.makeCircle(10, Base.Vector(p10), Base.Vector(1,0,0), 180, 270)
                edge2 = Part.makeLine(p2,p3)
                edge3 = Part.makeCircle(10, Base.Vector(p9), Base.Vector(1,0,0), 90, 180)
                edge4 = Part.makeLine(p4,p5)
                edge5 = Part.makeCircle(10, Base.Vector(p11), Base.Vector(1,0,0), 0, 90)
                edge6 = Part.makeLine(p6,p7)
                edge7 = Part.makeCircle(10, Base.Vector(p12), Base.Vector(1,0,0), 270, 360)
                edge8 = Part.makeLine(p8,p1)
                aWire=Part.Wire([edge1,edge2,edge3,edge4,edge5,edge6,edge7,edge8])
                #プロファイル
                t=3.0
                p1=(-0.8*B1,-h0/2,z1+M+R)
                p2=(-0.8*B1,-h0/2-t,z1+M+R)
                p3=(-t/2,-h0/2-t,z1+M+R)
                p4=(-t/2,-h0/2-B1,z1+M+R)
                p5=(t/2,-h0/2-B1,z1+M+R)
                p6=(t/2,-h0/2-t,z1+M+R)
                p7=(0.8*B1,-h0/2-t,z1+M+R)
                p8=(0.8*B1,-h0/2,z1+M+R)
                plist=[p1,p2,p3,p4,p5,p6,p7,p8,p1]
                w10=Part.makePolygon(plist)
                makeSolid=True
                isFrenet=True
                cb3 = Part.Wire(aWire).makePipeShell([w10],makeSolid,isFrenet)#サポート
                cb3.Placement=App.Placement(App.Vector(L1/2,0,-3.5*M),App.Rotation(App.Vector(1,0,0),0))
                c01=c01.fuse(cb3)
                #ハンドル
                torus=Part.makeTorus(w/2,12.5,Base.Vector(L1/2,0,z4+Lb1))
                c01=c01.fuse(cc1)
                c01=c01.fuse(torus)
                #スポーク
                for i in range(3):
                    c2 = Part.makeCylinder(7.5,(w-10)/2,Base.Vector(10/2,0,z4+Lb1),Base.Vector(1,0,0))
                    c2.Placement=App.Placement(App.Vector(L1/2,0,0),App.Rotation(App.Vector(0,0,1),i*120))
                    c01=c01.fuse(c2)
                doc=App.ActiveDocument
                label ='Gate valve(External)'+key_1+'A_'
                F_Obj = doc.addObject("Part::Feature",label)
                F_Obj.Shape=c01

        elif key=='13':
            st=self.comboBox_standard.currentText()
            dia=self.comboBox_dia.currentText()
            key_1=dia[:3]
            key_2=dia[-3:]
            if st=='JIS7.5k':
                sa=checks_75k_cast[key_1]
            elif st=='JIS10k':
                sa=checks_10k_cast[key_1]
            d=sa[0]/2
            L=float(sa[1])
            H0=float(sa[2])
            a=float(sa[3])
            d1=float(sa[4])
            R=float(sa[5])
            self.label_l.setText(QtGui.QApplication.translate("Dialog", str(d), None))
            if st=='JIS10k':
                sa=JIS10k[key_1]
            elif st=='JIS7.5k':    
                sa=JIS75k[key_1]

            L1=float(sa[4])
            d2=float(sa[1])/2
            D1=float(sa[3])/2
            x2=L/2-2*L1
            s=math.acos(x2/(R+a))
            a1=a*math.sin(s)

            Flange(self)
            c01=c1
            c01.Placement=App.Placement(App.Vector(0,0,0),App.Rotation(App.Vector(0,1,0),90))
            Flange(self)
            c2=c1
            c2.Placement=App.Placement(App.Vector(L-L1,0,0),App.Rotation(App.Vector(0,1,0),90))
            c01=c01.fuse(c2)

            Flange(self)
            c2=c1
            c2.Placement=App.Placement(App.Vector(L/2,0,H0-2*L1),App.Rotation(App.Vector(0,0,1),0))
            c01=c01.fuse(c2)

            if key_1>='150':
                ma=1.00
            else:
                ma=0.85

            p1=(L1,0,-d2)
            p2=(0,0,-D1)
            p3=(L1,0,-D1)
            p4=(L1,0,-(d2+a))
            p5=(2*L1,0,-(d2+a))
            p6=(L/2,0,-ma*D1)
            p7=(L-2*L1,0,-(d2+a))
            p8=(L-L1,0,-(d2+a))
            p9=(L-L1,0,-D1)
            p10=(L,0,-D1)
            p11=(L-L1,0,-d2)
            p12=(L-(2*L1+a1),0,-d2)
            p13=(L/2,0,-ma*D1+a)
            p14=(2*L1+a1,0,-d2)
            p15=(L-L1,0,0)
            p16=(L1,0,0)
            edge1 = Part.makeLine(p16,p4)
            edge4 = Part.makeLine(p4,p5)
            edge5=Part.Arc(Base.Vector(p5),Base.Vector(p6),Base.Vector(p7)).toShape()
            edge6 = Part.makeLine(p7,p8)
            edge7 = Part.makeLine(p8,p15)
            edge10 = Part.makeLine(p15,p16)
            edge11 = Part.makeLine(p16,p1)
            edge12 = Part.makeLine(p1,p14)
            edge13=Part.Arc(Base.Vector(p14),Base.Vector(p13),Base.Vector(p12)).toShape()
            edge14 = Part.makeLine(p12,p11)
            edge15 = Part.makeLine(p11,p15)
            #本体
            aWire=Part.Wire([edge1,edge4,edge5,edge6,edge7,edge10])
            aWire2=Part.Wire([edge11,edge12,edge13,edge14,edge15,edge10])
            pface=Part.Face(aWire)
            pface2=Part.Face(aWire2)
            c2=pface.revolve(Base.Vector(0,0,0),Base.Vector(1,0,0),360)
            c01=c01.fuse(c2)
            c3 = Part.makeCylinder(d2+2*a,H0-2*L1,Base.Vector(L/2,0,0),Base.Vector(0,0,1))
            c4 = Part.makeCylinder(d2+1*a,2*H0,Base.Vector(L/2,0,0),Base.Vector(0,0,1))
            c01=c01.fuse(c3)
            c01=c01.cut(c4)
            c20=pface2.revolve(Base.Vector(0,0,0),Base.Vector(1,0,0),360)
            c01=c01.cut(c20)

            #弁体仕切り
            wface=Part.makePlane(6*d2,a,Base.Vector(3*L1,-3*d2,-3*d2),Base.Vector(0,1,0))
            c2=wface.extrude(Base.Vector(0,6*d2,0))
            #Part.show(c2)
            #流路
            c22 = Part.makeCylinder(d,L/2,Base.Vector(3*L1,0,0),Base.Vector(1,0,0))
            c2=c2.cut(c22)
            if key_1>='25A':
                c2.Placement=App.Placement(App.Vector(a,0,-1.5*a),App.Rotation(App.Vector(0,1,0),-8))
            else:
                c2.Placement=App.Placement(App.Vector(a,0,-0.8*a),App.Rotation(App.Vector(0,1,0),-8))
            c3=c2.common(c20)
            c01=c01.fuse(c3)
            #弁体
            c2 = Part.makeCylinder(1.1*d,a,Base.Vector(3*L1+a,0,0),Base.Vector(1,0,0))
            if key_1>='25A':
                c2.Placement=App.Placement(App.Vector(a,0,-1.5*a),App.Rotation(App.Vector(0,1,0),-8))
            else:
                c2.Placement=App.Placement(App.Vector(a,0,-0.8*a),App.Rotation(App.Vector(0,1,0),-8))
            c01=c01.fuse(c2)

            Flange2(self)
            c2=c1
            c2.Placement=App.Placement(App.Vector(L/2,0,H0-1*L1+1),App.Rotation(App.Vector(0,0,1),0))
            c01=c01.fuse(c2)
            doc=App.ActiveDocument
            label = 'Chec_Valve_' + str(key_1)+'_'
            F_Obj = doc.addObject("Part::Feature",label)
            F_Obj.Shape=c01

        elif key=='14':
            dia=self.comboBox_dia.currentText()
            key_1=dia[:3]
            st=self.comboBox_standard.currentText()
            if st=='20mm':
                sa=exp_20mm[key_1]
                n=1
            elif st=='50mm':
                sa=exp_50mm[key_1]
                n=2
            elif st=='100mm':
                sa=exp_100mm[key_1]
                n=3
            elif st=='200mm':
                sa=exp_200mm[key_1]
                n=4
            d0=float(key_1)
            d1=float(sa[0])
            d2=float(sa[1])
            c=float(sa[4])
            f=float(sa[5])
            R=float(sa[6])
            l=float(sa[2])
            l1=float(sa[3])
            c01 = Part.makeCylinder(d1/2,l-2*c,Base.Vector(c,0,0),Base.Vector(1,0,0))
            c2 = Part.makeCylinder(d2/2,c,Base.Vector(0,0,0),Base.Vector(1,0,0))
            c01=c01.fuse(c2)
            c2= Part.makeCylinder(d2/2,c,Base.Vector(l-c,0,0),Base.Vector(1,0,0))
            c01=c01.fuse(c2)

            Flange(self)
            c2=c1
            c2.Placement=App.Placement(App.Vector(c,0,0),App.Rotation(App.Vector(0,1,0),90))
            c01=c01.fuse(c2)
            Flange(self)
            c2=c1
            c2.Placement=App.Placement(App.Vector(c+l1-k0,0,0),App.Rotation(App.Vector(0,1,0),90))

            c01=c01.fuse(c2)
            c2 = Part.makeCylinder(d0/2,l,Base.Vector(0,0,0),Base.Vector(1,0,0))
            c01=c01.cut(c2)
            for i in range(n):
                p1=(0,f,0)
                p2=(R,f+R,0)
                p3=(2*R,f,0)
                edge1=Part.Arc(Base.Vector(p1),Base.Vector(p2),Base.Vector(p3)).toShape()
                edge2 = Part.makeLine(p1,p3)
                aWire=Part.Wire([edge1,edge2])
                pface=Part.Face(aWire)
                c2=pface.revolve(Base.Vector(0,0,0),Base.Vector(1,0,0),360)
                c2.Placement=App.Placement(App.Vector((i+1)*l/(n+1)-R,0,0),App.Rotation(App.Vector(1,0,0),0))
                c01=c01.fuse(c2)
            doc=App.ActiveDocument
            label = 'Expansion_' + str(key_1)+'_'
            F_Obj = doc.addObject("Part::Feature",label)
            F_Obj.Shape=c01

        elif key=='15':
            dia=self.comboBox_dia.currentText()
            key_1=dia[:3]
            st=self.comboBox_standard.currentText()
            sa=exp_50mm[key_1]
            d0=float(key_1)
            d1=float(sa[0])
            d2=float(sa[1])
            c=3.0
            f=float(sa[5])
            R=float(sa[8])
            l=float(sa[7])
            l1=l-2*c

            t=14.0
            c01 = Part.makeCylinder(d1/2,l-2*c,Base.Vector(c,0,0),Base.Vector(1,0,0))
            c2 = Part.makeCylinder(d2/2,c,Base.Vector(0,0,0),Base.Vector(1,0,0))
            c01=c01.fuse(c2)
            c2= Part.makeCylinder(d2/2,c,Base.Vector(l-c,0,0),Base.Vector(1,0,0))
            c01=c01.fuse(c2)

            Flange(self)
            c2=c1
            c2.Placement=App.Placement(App.Vector(c,0,0),App.Rotation(App.Vector(0,1,0),90))
            c01=c01.fuse(c2)
            Flange(self)
            c2=c1
            c2.Placement=App.Placement(App.Vector(c+l1-k0,0,0),App.Rotation(App.Vector(0,1,0),90))
            c01=c01.fuse(c2)
            c2 = Part.makeCylinder(d0/2,l,Base.Vector(0,0,0),Base.Vector(1,0,0))
            c01=c01.cut(c2)

            p1=(c+t,d1/2,0)
            p2=(l/2,1.2*d1/2,0)
            p3=(l-(c+t),d1/2,0)
            edge1=Part.Arc(Base.Vector(p1),Base.Vector(p2),Base.Vector(p3)).toShape()
            edge2 = Part.makeLine(p1,p3)
            aWire=Part.Wire([edge1,edge2])
            pface=Part.Face(aWire)
            c2=pface.revolve(Base.Vector(0,0,0),Base.Vector(1,0,0),360)
            c01=c01.fuse(c2)

            doc=App.ActiveDocument
            label = 'Expansion_' + str(key_1)+'_'
            F_Obj = doc.addObject("Part::Feature",label)
            F_Obj.Shape=c01

            

class main():
        d = QtGui.QWidget()
        d.ui = Ui_Dialog()
        d.ui.setupUi(d)
        d.show()
if __name__ == '__main__':
    main()#(argv=['first-arg-is-ignored'], exit=False)


